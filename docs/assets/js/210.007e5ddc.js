(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{770:function(e,t,a){"use strict";a.r(t);var s=a(7),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"c-h-a-p-t-e-r-e-l-e-v-e-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-h-a-p-t-e-r-e-l-e-v-e-n"}},[e._v("#")]),e._v(" C H A P T E R E L E V E N")]),e._v(" "),a("p",[a("strong",[e._v("One Task at a Time")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("121\n")])])]),a("p",[e._v("Code that does multiple things at once is harder to understand. A single block of code might")]),e._v(" "),a("p",[e._v("be initializing new objects, cleansing data, parsing inputs, and applying business logic, all at")]),e._v(" "),a("p",[e._v("the same time. If all that code is woven together, it will be harder to understand than if each")]),e._v(" "),a("p",[e._v("“task” is started and completed on its own.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("K E Y I D E A")]),e._v(" "),a("p",[e._v("Code should be organized so that it’s doing only one task at a time.")])]),e._v(" "),a("p",[e._v("Said another way, this chapter is about “defragmenting” your code. The following diagram")]),e._v(" "),a("p",[e._v("illustrates this process: the left side shows the various tasks a piece of code is doing, and the")]),e._v(" "),a("p",[e._v("right side shows that same code after it’s been organized to do one task at a time.")]),e._v(" "),a("p",[e._v("You might have heard the advice that “functions should do only one thing.” Our advice is")]),e._v(" "),a("p",[e._v("similar, but isn’t always about function boundaries. Sure, breaking a large function into")]),e._v(" "),a("p",[e._v("multiple smaller functions can be good. But even if you don’t do this, you can still organize")]),e._v(" "),a("p",[e._v("the code inside that large function so it feels like there are separate logical sections.")]),e._v(" "),a("p",[e._v("Here’s the process we use to make code do “one task at a time”:")]),e._v(" "),a("ol",[a("li",[e._v("List out all the “tasks” your code is doing. We use the word “task” very loosely—it could\nbe as small as “make sure this object is valid” or as vague as “iterate through every node\nin the tree.”")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("2.Try to separate those tasks as much as you can into different functions or at least different\nsections of code.\n")])])]),a("p",[e._v("In this chapter, we’ll show you a number of examples of how to do this.")]),e._v(" "),a("p",[a("strong",[e._v("122")]),e._v(" CHAPTER ELEVEN")]),e._v(" "),a("h3",{attrs:{id:"tasks-can-be-small"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tasks-can-be-small"}},[e._v("#")]),e._v(" Tasks Can Be Small")]),e._v(" "),a("p",[e._v("Suppose there’s a voting widget on a blog where a user can vote a comment “Up” or “Down.”")]),e._v(" "),a("p",[e._v("The total score of a comment is the sum over all votes: +1 for each “Up” vote, –1 for each")]),e._v(" "),a("p",[e._v("“Down” vote.")]),e._v(" "),a("p",[e._v("Here are the three states a user’s vote can be in, and how it would affect the total score:")]),e._v(" "),a("p",[e._v("When the user clicks one of the buttons (to make/change her vote), the following JavaScript")]),e._v(" "),a("p",[e._v("is called:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('vote_changed(old_vote, new_vote); // each vote is "Up", "Down", or ""\n')])])]),a("p",[e._v("This function updates the total score and works for all combinations of old_vote/new_vote:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var vote_changed = function (old_vote, new_vote) {\nvar score = get_score();\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("if (new_vote !== old_vote) {\nif (new_vote === 'Up') {\nscore += (old_vote === 'Down'? 2 : 1);\n} else if (new_vote === 'Down') {\nscore -= (old_vote === 'Up'? 2 : 1);\n} else if (new_vote === '') {\nscore += (old_vote === 'Up'? -1 : 1);\n}\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("set_score(score);\n};\n")])])]),a("p",[e._v("Even though the code is pretty short, it’s doing a lot. There are lots of intricate details, and it’s")]),e._v(" "),a("p",[e._v("hard to tell at a glance whether there are any off-by-one errors, typos, or other bugs.")]),e._v(" "),a("p",[e._v("The code may seem to be doing only one thing (updating the score), but there are actually")]),e._v(" "),a("p",[a("em",[e._v("two")]),e._v(" tasks being performed at once:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1.old_vote and new_vote are being “parsed” into numerical values.\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("2.score is being updated.\n")])])]),a("p",[e._v("We can make the code easier to read by solving each task separately. The following code solves")]),e._v(" "),a("p",[e._v("the first task, of parsing the vote into a numerical value:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var vote_value = function (vote) {\nif (vote === 'Up') {\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ONE TASK AT A TIME 123\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("return +1;\n}\nif (vote === 'Down') {\nreturn -1;\n}\nreturn 0;\n};\n")])])]),a("p",[e._v("Now the rest of the code can solve the second task, updating score:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var vote_changed = function (old_vote, new_vote) {\nvar score = get_score();\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("score -= vote_value(old_vote); // remove the old vote\nscore += vote_value(new_vote); // add the new vote\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("set_score(score);\n};\n")])])]),a("p",[e._v("As you can see, this version of the code takes a lot less mental effort to convince yourself that")]),e._v(" "),a("p",[e._v("it works. That’s a big part of what makes code “easy to understand.”")]),e._v(" "),a("h3",{attrs:{id:"extracting-values-from-an-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extracting-values-from-an-object"}},[e._v("#")]),e._v(" Extracting Values from an Object")]),e._v(" "),a("p",[e._v("We once had some JavaScript that formatted a user’s location into a friendly string of "),a("em",[e._v("“City,")])]),e._v(" "),a("p",[a("em",[e._v("Country”")]),e._v(" like “Santa Monica, USA” or “Paris, France.” We were given a location_info dictionary")]),e._v(" "),a("p",[e._v("with plenty of structured information. All we had to do was pick a “ "),a("em",[e._v("City")]),e._v(" ” and a “ "),a("em",[e._v("Country")]),e._v(" ” from")]),e._v(" "),a("p",[e._v("all the fields and concatenate them together.")]),e._v(" "),a("p",[e._v("The following illustration shows example input/output:")]),e._v(" "),a("p",[e._v("It seems easy so far, but the tricky part is that "),a("em",[e._v("any or all of these four values might be missing")]),e._v(". Here’s")]),e._v(" "),a("p",[e._v("how we dealt with that:")]),e._v(" "),a("ul",[a("li",[e._v("When choosing the “City,” we preferred to use the “LocalityName” (city/town) if\navailable, then the “SubAdministrativeAreaName” (larger city/county), then the\n“AdministrativeAreaName” (state/territory).")])]),e._v(" "),a("p",[a("strong",[e._v("124")]),e._v(" CHAPTER ELEVEN")]),e._v(" "),a("ul",[a("li",[e._v("If all three were missing, the “City” was affectionately given the default “Middle-of-\nNowhere.”")]),e._v(" "),a("li",[e._v("If the “CountryName” was missing, “Planet Earth” was used as a default.")])]),e._v(" "),a("p",[e._v("The following figure shows two examples of handling missing values.")]),e._v(" "),a("p",[e._v("Here is the code we wrote to implement this task:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var place = location_info["LocalityName"]; // e.g. "Santa Monica"\nif (!place) {\nplace = location_info["SubAdministrativeAreaName"]; // e.g. "Los Angeles"\n}\nif (!place) {\nplace = location_info["AdministrativeAreaName"]; // e.g. "California"\n}\nif (!place) {\nplace = "Middle-of-Nowhere";\n}\nif (location_info["CountryName"]) {\nplace += ", " + location_info["CountryName"]; // e.g. "USA"\n} else {\nplace += ", Planet Earth";\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("return place;\n")])])]),a("p",[e._v("Sure, it's a little messy, but it got the job done.")]),e._v(" "),a("p",[e._v("But a few days later, we needed to improve the functionality: for locations in the United States,")]),e._v(" "),a("p",[e._v("we wanted to display the "),a("em",[e._v("state")]),e._v(" instead of the country (if possible). So instead of “Santa Monica,")]),e._v(" "),a("p",[e._v("USA” it would return “Santa Monica, California.”")]),e._v(" "),a("p",[e._v("Adding this feature to the previous code would have made it much uglier.")]),e._v(" "),a("p",[a("strong",[e._v("Applying “One Task at a Time”")])]),e._v(" "),a("p",[e._v("Rather than bend this code to our will, we stopped and realized that it was already doing")]),e._v(" "),a("p",[e._v("multiple tasks at the same time:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ONE TASK AT A TIME 125\n")])])]),a("ol",[a("li",[e._v("Extracting values from the dictionary location_info")]),e._v(" "),a("li",[e._v("Going through a preference order for “City,” defaulting to “Middle-of-Nowhere” if it\ncouldn’t find anything")]),e._v(" "),a("li",[e._v("Getting the “Country,” and using “Planet Earth” if there wasn’t one")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("4.Updating place\n")])])]),a("p",[e._v("So instead, we rewrote the original code to solve each of these tasks independently.")]),e._v(" "),a("p",[e._v("The first task (extracting values from location_info) was easy to solve on its own:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var town = location_info["LocalityName"]; // e.g. "Santa Monica"\nvar city = location_info["SubAdministrativeAreaName"]; // e.g. "Los Angeles"\nvar state = location_info["AdministrativeAreaName"]; // e.g. "CA"\nvar country = location_info["CountryName"]; // e.g. "USA"\n')])])]),a("p",[e._v("At this point, we were done using location_info and didn’t have to remember those long and")]),e._v(" "),a("p",[e._v("unintuitive keys. Instead, we had four simple variables to work with.")]),e._v(" "),a("p",[e._v("Next, we had to figure out what the “second half” of the return value would be:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Start with the default, and keep overwriting with the most specific value.\nvar second_half = "Planet Earth";\nif (country) {\nsecond_half = country;\n}\nif (state && country === "USA") {\nsecond_half = state;\n}\n')])])]),a("p",[e._v("Similarly, we could figure out the “first half”:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('var first_half = "Middle-of-Nowhere";\nif (state && country !== "USA") {\nfirst_half = state;\n}\nif (city) {\nfirst_half = city;\n}\nif (town) {\nfirst_half = town;\n}\n')])])]),a("p",[e._v("Finally, we pieced the information together:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('return first_half + ", " + second_half ;\n')])])]),a("p",[e._v("The “defragmentation” illustration at the beginning of this chapter was actually a")]),e._v(" "),a("p",[e._v("representation of the original solution and this new version. Here’s that same illustration,")]),e._v(" "),a("p",[e._v("with more details filled in:")]),e._v(" "),a("p",[a("strong",[e._v("126")]),e._v(" CHAPTER ELEVEN")]),e._v(" "),a("p",[e._v("As you can see, the four tasks in the second solution have been defragmented into distinct")]),e._v(" "),a("p",[e._v("regions.")]),e._v(" "),a("p",[a("strong",[e._v("Another Approach")])]),e._v(" "),a("p",[e._v("When refactoring code, there are often multiple ways to do it, and this case is no exception.")]),e._v(" "),a("p",[e._v("Once you’ve separated some of the tasks, the code gets easier to think about, and you might")]),e._v(" "),a("p",[e._v("come up with even better ways to refactor it.")]),e._v(" "),a("p",[e._v("For instance, that earlier series of if statements requires some careful reading to know if every")]),e._v(" "),a("p",[e._v("case works correctly. There are actually two subtasks going on simultaneously in that code:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1.Go through a list of variables, and pick the most preferred one that’s available.\n2.Use a different list, depending on whether the country is “USA”.\n")])])]),a("p",[e._v("Looking back, you can see that the earlier code has the “if USA” logic interwoven with the rest")]),e._v(" "),a("p",[e._v("of the logic. Instead, we can handle the USA and non-USA cases separately:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var first_half, second_half;\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('if (country === "USA") {\nfirst_half = town || city || "Middle-of-Nowhere";\nsecond_half = state || "USA";\n} else {\nfirst_half = town || city || state || "Middle-of-Nowhere";\nsecond_half = country || "Planet Earth";\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('return first_half + ", " + second_half;\n')])])]),a("p",[e._v("In case you aren’t familiar with JavaScript, a || b || c is idiomatic and evaluates to the first")]),e._v(" "),a("p",[e._v("“truthy” value (in this case, a defined, nonempty string). This code has the benefit that it’s very")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ONE TASK AT A TIME 127\n")])])]),a("p",[e._v("easy to inspect the preference list and update it. Most of the if statements have been swept")]),e._v(" "),a("p",[e._v("away, and the business logic is represented by fewer lines of code.")]),e._v(" "),a("h3",{attrs:{id:"a-larger-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-larger-example"}},[e._v("#")]),e._v(" A Larger Example")]),e._v(" "),a("p",[e._v("In a web-crawling system we built, a function named UpdateCounts() was called to increment")]),e._v(" "),a("p",[e._v("various statistics after each web page was downloaded:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('void UpdateCounts(HttpDownload hd) {\ncounts["Exit State" ][ hd.exit_state() ]++; // e.g. "SUCCESS" or "FAILURE"\ncounts["Http Response"][ hd.http_response() ]++; // e.g. "404 NOT FOUND"\ncounts["Content-Type" ][ hd.content_type() ]++; // e.g. "text/html"\n}\n')])])]),a("p",[e._v("Well, that’s how we "),a("em",[e._v("wish")]),e._v(" the code looked!")]),e._v(" "),a("p",[e._v("In actuality, the HttpDownload object had none of the methods shown here. Instead,")]),e._v(" "),a("p",[e._v("HttpDownload was a very large and complex class, with many nested classes, and we had to fish")]),e._v(" "),a("p",[e._v("out those values ourselves. To make matters worse, sometimes those values were missing")]),e._v(" "),a("p",[e._v('altogether—in which case we just used "unknown" as the default value.')]),e._v(" "),a("p",[e._v("Because of all this, the real code was quite a mess:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// WARNING: DO NOT STARE DIRECTLY AT THIS CODE FOR EXTENDED PERIODS OF TIME.\nvoid UpdateCounts(HttpDownload hd) {\n// Figure out the Exit State, if available.\nif (!hd.has_event_log() || !hd.event_log().has_exit_state()) {\ncounts["Exit State"]["unknown"]++;\n} else {\nstring state_str = ExitStateTypeName(hd.event_log().exit_state());\ncounts["Exit State"][state_str]++;\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// If there are no HTTP headers at all, use "unknown" for the remaining elements.\nif (!hd.has_http_headers()) {\ncounts["Http Response"]["unknown"]++;\ncounts["Content-Type"]["unknown"]++;\nreturn;\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("HttpHeaders headers = hd.http_headers();\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Log the HTTP response, if known, otherwise log "unknown"\nif (!headers.has_response_code()) {\ncounts["Http Response"]["unknown"]++;\n} else {\nstring code = StringPrintf("%d", headers.response_code());\ncounts["Http Response"][code]++;\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Log the Content-Type if known, otherwise log "unknown"\nif (!headers.has_content_type()) {\ncounts["Content-Type"]["unknown"]++;\n')])])]),a("p",[a("strong",[e._v("128")]),e._v(" CHAPTER ELEVEN")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('} else {\nstring content_type = ContentTypeMime(headers.content_type());\ncounts["Content-Type"][content_type]++;\n}\n}\n')])])]),a("p",[e._v("As you can see, there’s a lot of code, and a lot of logic, and even a few repeated lines of code.")]),e._v(" "),a("p",[e._v("This code is not fun to read.")]),e._v(" "),a("p",[e._v("In particular, this code switches back and forth between different tasks. Here are the different")]),e._v(" "),a("p",[e._v("tasks interleaved throughout the code:")]),e._v(" "),a("ol",[a("li",[e._v('Using "unknown" as the default value for each key')]),e._v(" "),a("li",[e._v("Detecting whether members of HttpDownload are missing")]),e._v(" "),a("li",[e._v("Extracting the value and converting it to a string")]),e._v(" "),a("li",[e._v("Updating counts[]")])]),e._v(" "),a("p",[e._v("We can improve the code by separating some of these tasks into distinct regions in the code:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('void UpdateCounts(HttpDownload hd) {\n// Task: define default values for each of the values we want to extract\nstring exit_state = "unknown";\nstring http_response = "unknown";\nstring content_type = "unknown";\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Task: try to extract each value from HttpDownload, one by one\nif (hd.has_event_log() && hd.event_log().has_exit_state()) {\nexit_state = ExitStateTypeName(hd.event_log().exit_state());\n}\nif (hd.has_http_headers() && hd.http_headers().has_response_code()) {\nhttp_response = StringPrintf("%d", hd.http_headers().response_code());\n}\nif (hd.has_http_headers() && hd.http_headers().has_content_type()) {\ncontent_type = ContentTypeMime(hd.http_headers().content_type());\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Task: update counts[]\ncounts["Exit State"][exit_state]++;\ncounts["Http Response"][http_response]++;\ncounts["Content-Type"][content_type]++;\n}\n')])])]),a("p",[e._v("As you can see, the code has three separate regions with the following aims:")]),e._v(" "),a("ol",[a("li",[e._v("Define defaults for the three keys we are interested in.")]),e._v(" "),a("li",[e._v("Extract the values, if available, for each of these keys, and convert them to strings.")]),e._v(" "),a("li",[e._v("Update counts[] for each key/value.")])]),e._v(" "),a("p",[e._v("What’s good about these regions is that they’re "),a("em",[e._v("isolated")]),e._v(" from one another—while you’re reading")]),e._v(" "),a("p",[e._v("one region, you don’t need to think about the other regions.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ONE TASK AT A TIME 129\n")])])]),a("p",[e._v("Note that although we listed four tasks, we were able to separate only three of them. That’s")]),e._v(" "),a("p",[e._v("perfectly fine: the tasks you list initially are just a starting point. Even separating "),a("em",[e._v("some")]),e._v(" of them")]),e._v(" "),a("p",[e._v("can help things a lot, as it did here.")]),e._v(" "),a("p",[a("strong",[e._v("Further Improvements")])]),e._v(" "),a("p",[e._v("This new version of the code is a marked improvement from the original monstrosity. And")]),e._v(" "),a("p",[e._v("notice that we didn’t even have to create other functions to perform this cleanup. As we")]),e._v(" "),a("p",[e._v("mentioned before, the idea of “one task at a time” can help you clean up code regardless of")]),e._v(" "),a("p",[e._v("function boundaries.")]),e._v(" "),a("p",[e._v("However, we could also have improved this code another way, by introducing three helper")]),e._v(" "),a("p",[e._v("functions:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('void UpdateCounts(HttpDownload hd) {\ncounts["Exit State"][ ExitState(hd) ]++;\ncounts["Http Response"][ HttpResponse(hd) ]++;\ncounts["Content-Type"][ ContentType(hd) ]++;\n}\n')])])]),a("p",[e._v("These functions would extract the corresponding value, or return “unknown”. For example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('string ExitState (HttpDownload hd) {\nif (hd.has_event_log() && hd.event_log().has_exit_state()) {\nreturn ExitStateTypeName(hd.event_log().exit_state());\n} else {\nreturn "unknown";\n}\n}\n')])])]),a("p",[e._v("Notice that this alternative solution doesn’t even define any variables! As we mentioned in")]),e._v(" "),a("p",[e._v("Chapter 9, "),a("em",[e._v("Variables and Readability")]),e._v(" , variables that hold intermediate results can often be")]),e._v(" "),a("p",[e._v("eliminated entirely.")]),e._v(" "),a("p",[e._v("In this solution, we’ve simply “sliced” the problem in a different direction. Both solutions are")]),e._v(" "),a("p",[e._v("highly readable, as they require the reader to think about only one task at a time.")]),e._v(" "),a("h3",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),a("p",[e._v("This chapter illustrates a simple technique for organizing your code: "),a("strong",[e._v("do only one task at a")])]),e._v(" "),a("p",[a("strong",[e._v("time")]),e._v(".")]),e._v(" "),a("p",[e._v("If you have code that’s difficult to read, try to list all of the tasks it’s doing. Some of these tasks")]),e._v(" "),a("p",[e._v("might easily become separate functions (or classes). Others might just become logical")]),e._v(" "),a("p",[e._v("“paragraphs” within a single function. The exact details of how you separate these tasks isn’t")]),e._v(" "),a("p",[e._v("as important as the fact that they’re separated. The hard part is accurately describing all the")]),e._v(" "),a("p",[e._v("little things your program is doing.")])])}),[],!1,null,null,null);t.default=n.exports}}]);