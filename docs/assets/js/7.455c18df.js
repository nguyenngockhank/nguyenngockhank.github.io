(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{203:function(t,e,a){t.exports=a.p+"assets/img/sql-nosql.8a9a364b.png"},271:function(t,e,a){"use strict";a.r(e);var n=a(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"sql-vs-nosql"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sql-vs-nosql","aria-hidden":"true"}},[t._v("#")]),t._v(" SQL vs. NoSQL")]),t._v(" "),n("p",[n("img",{attrs:{src:a(203),alt:"SQL vs NoSQL"}})]),t._v(" "),n("table",[n("thead",[n("tr",[n("th"),t._v(" "),n("th",[t._v("NoSQL")]),t._v(" "),n("th",[t._v("SQL")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("strong",[t._v("Model")])]),t._v(" "),n("td",[t._v("Non-relational")]),t._v(" "),n("td",[t._v("Relational")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("Stores data in JSON documents. key/value pairs, wide column stores, or graphs")]),t._v(" "),n("td",[t._v("Stores data in a table")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("Data")])]),t._v(" "),n("td",[t._v("Offers flexibility as not every record needs to store the same properties")]),t._v(" "),n("td",[t._v("Great for solutions where every record has the same properties")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("New properties can be added on the fly")]),t._v(" "),n("td",[t._v("Adding a new property may require altering schemas or backfilling data")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("Relationships are often captured by denormalizing data and presenting all data for an object in a single record")]),t._v(" "),n("td",[t._v("Relationships are often captured in normalized model using joins to resolve references across tables")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("Good for semi-structured, complex or nested data")]),t._v(" "),n("td",[t._v("Good for structured data")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("Schema")])]),t._v(" "),n("td",[t._v("Dynamic or flexible schemas")]),t._v(" "),n("td",[t._v("Strict schema")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("Database is schema-agnostic and the schema is dictated by the application. This allows for agility and highly itertive development")]),t._v(" "),n("td",[t._v("Schema must be maintained and kept in sync between application and database")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("Transactions")])]),t._v(" "),n("td",[t._v("ACID transaction support varies per solution")]),t._v(" "),n("td",[t._v("Supports ACID transactions")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("Consistency & Availability")])]),t._v(" "),n("td",[t._v("Eventual to strong consistency supported, depending on solution")]),t._v(" "),n("td",[t._v("Strong consistency enforced")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("Consistency, availability, and performance can be traded to meet the needs of the application (CAP theorem)")]),t._v(" "),n("td",[t._v("Consistency is prioritized over availability and performance")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("Performance")])]),t._v(" "),n("td",[t._v("Performance can be maximized by reducing consistency, if needed")]),t._v(" "),n("td",[t._v("Insert and update performance is dependent upon how fast a write is committed, as strong consistency is enforced. Performance can be maximized by using scaling up available resources and using in-memory structures.")])]),t._v(" "),n("tr",[n("td"),t._v(" "),n("td",[t._v("All information about an entity is typically in a single record, so an update can happen in one operation")]),t._v(" "),n("td",[t._v("Information about an entity may be spread across many tables or rows, requiring many joins to complete an update or a query")])]),t._v(" "),n("tr",[n("td",[n("strong",[t._v("Scale")])]),t._v(" "),n("td",[t._v("Scaling is typically achieved horizontally with data partitioned to span servers")]),t._v(" "),n("td",[t._v("Scaling is typically achieved vertically with more server resources")])])])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("SQL")]),t._v(": Structured Query Language")]),t._v(" "),n("li",[n("strong",[t._v("UnQL")]),t._v(": Unstructured Query Language")]),t._v(" "),n("li",[n("strong",[t._v("ACID")]),t._v(": Atomicity, Consistency, Isolation and Durability")]),t._v(" "),n("li",[n("strong",[t._v("CAP")]),t._v(": Consistency, Availability and Partition tolerance")])])])}),[],!1,null,null,null);e.default=r.exports}}]);