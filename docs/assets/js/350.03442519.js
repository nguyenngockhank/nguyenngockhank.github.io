(window.webpackJsonp=window.webpackJsonp||[]).push([[350],{1532:function(n,h,t){"use strict";t.r(h);var c=t(7),i=Object(c.a)({},(function(){var n=this,h=n.$createElement,t=n._self._c||h;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_36-than-thoai-guru"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_36-than-thoai-guru"}},[n._v("#")]),n._v(" 36: Thần Thoại Guru")]),n._v(" "),t("p",[n._v("Bất kì ai đã làm việc đủ lâu trong phần mềm đều từng nghe những câu hỏi như thế này:")]),n._v(" "),t("p",[t("em",[n._v("- Ôi đang có sự bất bình thường XYZ. Bạn có biết đây là vấn đề gì không?")])]),n._v(" "),t("p",[n._v("Những người có câu hỏi ấy đều hiếm khi bận tâm các về stack traces, error logs, hoặc là các nội dung liên quan dẫn đến vấn đề đó. Họ dường như nghĩ bạn ở một mức độ khác giỏi hơn, và các tình huống đó đều xuất hiện với bạn mà không có sự phân tích nào dựa trên dấu hiệu.")]),n._v(" "),t("p",[n._v("Họ nghĩ bạn là một thần thoại.")]),n._v(" "),t("p",[n._v("Chúng ta luôn được hỏi những câu hỏi đó từ những người chưa tìm hiểu về phần mềm: với họ thì những hệ thống ấy có vẻ thật thần kỳ. Điều khiến tôi quan ngại là thậm chí nhìn thấy điều này từ chính cộng đồng của chúng ta. Những câu hỏi tương tự cũng nảy sinh trong chương trình thiết kế, như là “"),t("em",[n._v("Tôi đang phát triển việc quản trị hàng tồn kho, tôi có nên sử dụng optimistic locking không?")]),n._v("” Trớ trêu thay, những người đặt câu hỏi thường được trang bị kiến thức tốt hơn để trả lời chúng hơn là những người nhận câu hỏi. Những người hỏi có thể sẽ biết được ngữ cảnh, hiểu rõ các yêu cầu và có khả năng thấy được những lợi thế và bất lợi trong các kế hoạch, chiến lược khác nhau. Song họ lại mong được nhận câu trả lời khôn ngoan từ bạn mà không cần kể đến bối cảnh đấy. Họ mong đợi sự kì diệu.")]),n._v(" "),t("p",[n._v("Đã đến lúc cho nền công nghiệp phần mềm xóa đi vị thần Guru này. “Gurus” là con người. Họ sử dụng logic và phân tích các vấn đề một cách có hệ thống như chúng ta. Họ sử dụng lối suy nghĩ ngắn gọn và cả trực giác. Hãy để ý đến người lập trình viên giỏi nhất mà bạn biết: anh ta đã từng không giỏi về phần mềm như bạn bây giờ. Nếu có ai trông có vẻ như là một guru thì đó chính là thành quả của nhiều năm liền nỗ lực học tập và điều chỉnh tư duy. Một “guru” chỉ đơn giản là một người thông minh luôn học hỏi không ngừng.")]),n._v(" "),t("p",[n._v("Tất nhiên, nó vẫn còn một sự khác biệt lớn về khả năng bẩm sinh. Nhiều hackers ngoài kia rất thông minh, hiểu biết hơn và nhiều năng suất hơn bao giờ hết. Ngay cả như vậy, việc xóa đi hình ảnh thần thoại guru vẫn gây ảnh hưởng tích cực. Ví dụ, khi làm việc với những người thông minh hơn tôi, tất nhiên tôi phải làm những công việc cần di chuyển, để cung cấp những ngữ cảnh cần thiết để họ có thể áp dụng khả năng của anh/cô ấy một cách hiệu quả. Xóa bỏ thần thoại guru cũng đồng nghĩa với việc gỡ bỏ rào cản nhận thức cho sự phát triển. Thay vì rào cản ma thuật, tôi thấy tôi có thể tiến lên liên tục.")]),n._v(" "),t("p",[n._v("Cuối cùng, một trong những chướng ngại vật lớn nhất của phần mềm chính là những người thông minh cố tình tuyên truyền vị thần thoại guru. Việc này có thể được thực hiện từ cái tôi, hoặc là chiến thuật để nâng cao giá trị của một người theo cảm nhận của khách hàng hay nhà tuyển dụng. Trớ trêu thay, thái độ này có thể giảm giá trị của những người thông minh, bởi vì họ không đóng góp cho sự phát triển của đồng nghiệp họ. Chúng ta không cần gurus. Chúng ta cần những người chuyên nghiệp sẵn lòng giúp đỡ những người chuyên nghiệp khác phát triển trong lĩnh vực của họ. Đó là nơi cho tất cả chúng ta.")])])}),[],!1,null,null,null);h.default=i.exports}}]);