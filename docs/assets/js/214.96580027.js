(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{1344:function(t,e,s){"use strict";s.r(e);var a=s(7),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"rate-limiter-pattern"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rate-limiter-pattern"}},[t._v("#")]),t._v(" Rate limiter Pattern")]),t._v(" "),s("p",[t._v("The rate limiter pattern is a design technique used to control the rate at which incoming requests or actions are processed by a system. It's essentially a mechanism to manage the throughput of a service by limiting the number of requests it can handle within a specific timeframe.")]),t._v(" "),s("p",[s("strong",[t._v("Why is it important?")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Protects from overload")]),t._v(": Prevents system crashes due to excessive traffic.")]),t._v(" "),s("li",[s("strong",[t._v("Fairness")]),t._v(": Ensures equal access to resources for all users.")]),t._v(" "),s("li",[s("strong",[t._v("API abuse prevention")]),t._v(": Stops malicious attacks like DDoS.")]),t._v(" "),s("li",[s("strong",[t._v("Resource management")]),t._v(": Optimizes resource utilization.")])]),t._v(" "),s("h2",{attrs:{id:"algorithms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#algorithms"}},[t._v("#")]),t._v(" Algorithms")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Fixed Window Counter")]),t._v(": Simplest approach, counts requests within a fixed time window.")]),t._v(" "),s("li",[s("strong",[t._v("Sliding Log Window")]),t._v(": Maintains a sliding window of fixed size and counts requests within that window.")]),t._v(" "),s("li",[s("strong",[t._v("Token Bucket")]),t._v(": Continuously generates tokens at a fixed rate. Each request consumes a token.")]),t._v(" "),s("li",[s("strong",[t._v("Leaky Bucket")]),t._v(": Similar to Token Bucket but with a leakage rate, allowing for burstiness.")])]),t._v(" "),s("h2",{attrs:{id:"token-bucket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token-bucket"}},[t._v("#")]),t._v(" Token bucket")]),t._v(" "),s("p",[t._v("A token bucket is a container that has pre-defined capacity. Tokens are put in the bucket at preset rates periodically. Once the bucket is full, no more tokens are added.")]),t._v(" "),s("p",[t._v("E.g: the token bucket capacity is 4. The refiller puts 2 tokens into the bucket every second. Once the bucket is full, extra tokens will overflow.")]),t._v(" "),s("p",[t._v("Each request consumes one token. When a request arrives, we check if there are enough tokens in the bucket.")]),t._v(" "),s("ul",[s("li",[t._v("If there are enough tokens, we take one token out for each request, and the request goes through.")]),t._v(" "),s("li",[t._v("If there are not enough tokens, the request is dropped.")])]),t._v(" "),s("p",[t._v("The token bucket algorithm takes two parameters:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Bucket size")]),t._v(": the maximum number of tokens allowed in the bucket")]),t._v(" "),s("li",[s("strong",[t._v("Refill rate")]),t._v(": number of tokens put into the bucket every second")])]),t._v(" "),s("p",[t._v("How many buckets do we need? This varies, and it depends on the rate-limiting rules. Here are a few examples.")]),t._v(" "),s("ul",[s("li",[t._v("It is usually necessary to have "),s("strong",[t._v("different buckets for different API endpoints")]),t._v(". For instance, if a user is allowed to make 1 post per second, add 150 friends per day, and like 5 posts per second, 3 buckets are required for each user.")]),t._v(" "),s("li",[t._v("If we need to throttle requests based on IP addresses, each IP address requires a bucket")]),t._v(" "),s("li",[t._v("If the system allows a maximum of 10,000 requests per second, it makes sense to have a global bucket shared by all requests.")])]),t._v(" "),s("p",[s("strong",[t._v("Pros")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("The algorithm is easy to implement.")]),t._v(" "),s("li",[t._v("Memory efficient.")]),t._v(" "),s("li",[t._v("Token bucket allows a burst of traffic for short periods. A request can go through as long as there are tokens left.\n"),s("strong",[t._v("Cons")]),t._v(":")]),t._v(" "),s("li",[t._v("Two parameters in the algorithm are bucket size and token refill rate. However, it might be challenging to tune them properly.")])]),t._v(" "),s("h2",{attrs:{id:"leaking-bucket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leaking-bucket"}},[t._v("#")]),t._v(" Leaking bucket")]),t._v(" "),s("p",[t._v("Imagine a leaky bucket. Water (packets) is poured into the bucket at an arbitrary rate. However, there's a hole at the bottom, allowing water to leak out at a constant rate. If the water is poured in faster than it can leak out, the bucket will eventually overflow.")]),t._v(" "),s("h3",{attrs:{id:"how-it-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works"}},[t._v("#")]),t._v(" How it Works")]),t._v(" "),s("p",[t._v("In the context of network traffic, the leaky bucket algorithm operates similarly:")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Bucket")]),t._v(": Represents a buffer to store incoming packets.")]),t._v(" "),s("li",[s("strong",[t._v("Input Rate")]),t._v(": Packets arrive at the bucket at a variable rate.")]),t._v(" "),s("li",[s("strong",[t._v("Output Rate")]),t._v(": Packets are removed from the bucket and sent at a constant rate.")]),t._v(" "),s("li",[s("strong",[t._v("Overflow")]),t._v(": If the bucket fills up before packets can be removed, incoming packets are typically dropped.")])]),t._v(" "),s("h3",{attrs:{id:"key-characteristics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#key-characteristics"}},[t._v("#")]),t._v(" Key Characteristics")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Smooths traffic")]),t._v(": It ensures a constant output rate regardless of the input burstiness.")]),t._v(" "),s("li",[s("strong",[t._v("Simple implementation")]),t._v(": Relatively easy to implement compared to other algorithms.")]),t._v(" "),s("li",[s("strong",[t._v("Packet loss")]),t._v(": Can lead to packet loss if the input rate exceeds the output rate for an extended period.")])]),t._v(" "),s("h3",{attrs:{id:"sliding-window-counter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sliding-window-counter"}},[t._v("#")]),t._v(" Sliding window counter")]),t._v(" "),s("p",[s("strong",[t._v("Redis lua example:")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" totalHits "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INCR"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" timeToExpire "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PTTL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" timeToExpire "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    redis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PEXPIRE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tonumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timeToExpire "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tonumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGV"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" totalHits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeToExpire "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" scriptSrc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" results"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("redis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EVAL'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    scriptSrc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ttl "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"bulkhead-vs-rate-limiter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bulkhead-vs-rate-limiter"}},[t._v("#")]),t._v(" Bulkhead vs Rate Limiter")]),t._v(" "),s("p",[s("strong",[t._v("Bulkhead")])]),t._v(" "),s("p",[t._v("Limit number of concurrent calls at a time")]),t._v(" "),s("p",[t._v("Ex: Allow 5 concurrent calls at a time")]),t._v(" "),s("p",[s("strong",[t._v("Rate Limiter")])]),t._v(" "),s("p",[t._v("Limit number total calls in given period of time")]),t._v(" "),s("p",[t._v("Ex: Allow 5 calls every 2 second.")])])}),[],!1,null,null,null);e.default=n.exports}}]);