(window.webpackJsonp=window.webpackJsonp||[]).push([[463],{1686:function(e,t,s){"use strict";s.r(t);var a=s(7),v=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"linux-network-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-network-tools"}},[e._v("#")]),e._v(" Linux network tools")]),e._v(" "),s("h2",{attrs:{id:"networking-tools"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#networking-tools"}},[e._v("#")]),e._v(" Networking tools")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://i.pinimg.com/originals/c4/43/ff/c443ff43401968352c102d21972ca902.png",alt:"Networking tools"}})]),e._v(" "),s("ul",[s("li",[e._v("ping")]),e._v(" "),s("li",[e._v("curl")]),e._v(" "),s("li",[e._v("httpie")]),e._v(" "),s("li",[e._v("wget: download files")]),e._v(" "),s("li",[e._v("tc")]),e._v(" "),s("li",[e._v("dig / nslookup")]),e._v(" "),s("li",[s("code",[e._v("whois")]),e._v(": check domain registered")]),e._v(" "),s("li",[s("code",[e._v("ssh")]),e._v(": secure shell")]),e._v(" "),s("li",[s("code",[e._v("scp")]),e._v(": copy files (over ssh)")]),e._v(" "),s("li",[s("code",[e._v("rsync")]),e._v(": copy only changed files (over ssh)")]),e._v(" "),s("li",[e._v("ngrep: grep ur network")]),e._v(" "),s("li",[e._v("tcpdump: show me all packets on port 80")]),e._v(" "),s("li",[e._v("wireshark")]),e._v(" "),s("li",[e._v("tshark")]),e._v(" "),s("li",[e._v("tcpflow")]),e._v(" "),s("li",[e._v("ifconfig: what is my IP address")]),e._v(" "),s("li",[e._v("route: view for change the route table")]),e._v(" "),s("li",[s("code",[e._v("ip")]),e._v(": replace ifconfig, route, ...")]),e._v(" "),s("li",[e._v("arp: see ARP table")]),e._v(" "),s("li",[e._v("mitmproxy: spy on SSL connections ur programs r making")]),e._v(" "),s("li",[s("code",[e._v("nmap")]),e._v(": scanning ports")]),e._v(" "),s("li",[e._v("zenmap: GUI for nmap")]),e._v(" "),s("li",[s("code",[e._v("p0f")]),e._v(": identify OS of hosts connecting to you")]),e._v(" "),s("li",[e._v("openvpn: a VPN")]),e._v(" "),s("li",[e._v("wireguard: newer VPN")]),e._v(" "),s("li",[e._v("nc: netcat, make TCP connections manually")]),e._v(" "),s("li",[e._v("socat: proxy a TCP socket to a unit domain socket ...")]),e._v(" "),s("li",[s("code",[e._v("telnet")]),e._v(": like ssh but insecure")]),e._v(" "),s("li",[e._v("fpt / sftp: copy files")]),e._v(" "),s("li",[e._v("netstat / ss / "),s("code",[e._v("lsof")]),e._v(" / "),s("code",[e._v("fuser")]),e._v(": what ports are servers using")]),e._v(" "),s("li",[s("code",[e._v("iptables")]),e._v(": setup firewalls & NAT")]),e._v(" "),s("li",[e._v("nftables: new version of iptables")]),e._v(" "),s("li",[e._v("hping 3: construct any TCP packet u want")]),e._v(" "),s("li",[e._v("traceroute / mtr: what servers are on the way to that server")]),e._v(" "),s("li",[e._v("tcptraceroute: use tcp packets instead of "),s("code",[e._v("icmp")]),e._v(" to "),s("code",[e._v("traceroute")])]),e._v(" "),s("li",[e._v("ethtool")]),e._v(" "),s("li",[e._v("iw / iwconfig")]),e._v(" "),s("li",[e._v("sysctl")]),e._v(" "),s("li",[s("code",[e._v("openssl")]),e._v(": do literally anything with SSL certificates")]),e._v(" "),s("li",[s("code",[e._v("stunnel")]),e._v(": make a SSL proxy for an insecure server")]),e._v(" "),s("li",[e._v("iptraf / nethogs / iftap / ntap")]),e._v(" "),s("li",[e._v("ab / nload / iperf: benchmarking tools")]),e._v(" "),s("li",[e._v("ipcalc")]),e._v(" "),s("li",[e._v("nsenter: enter a container process's network namespace")])]),e._v(" "),s("h2",{attrs:{id:"find-kill-process-id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-kill-process-id"}},[e._v("#")]),e._v(" Find & kill Process Id")]),e._v(" "),s("p",[s("strong",[e._v("Way 1")]),e._v(": Using "),s("code",[e._v("fuser")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("fuser")]),e._v(" -k "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v("/tcp\n")])])]),s("ul",[s("li",[s("code",[e._v("-k")]),e._v(": kill")])]),e._v(" "),s("p",[s("strong",[e._v("Way 2")]),e._v(": Using "),s("code",[e._v("fuser")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("pid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("lsof")]),e._v(" -t -i :80"),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&&")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("kill")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$pid")]),e._v("\n")])])]),s("ul",[s("li",[s("code",[e._v("-t")]),e._v(": TCP connections")]),e._v(" "),s("li",[s("code",[e._v("-i")]),e._v(": filter")])]),e._v(" "),s("p",[e._v("It's recommended to use the first method ("),s("code",[e._v("fuser -k 80/tcp")]),e._v(") as it directly terminates the process. The second method might require additional parsing depending on the output of "),s("code",[e._v("lsof")]),e._v(".")])])}),[],!1,null,null,null);t.default=v.exports}}]);