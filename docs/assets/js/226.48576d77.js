(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{792:function(e,t,a){"use strict";a.r(t);var s=a(7),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h3",{attrs:{id:"c-h-a-p-t-e-r-f-i-v-e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-h-a-p-t-e-r-f-i-v-e"}},[e._v("#")]),e._v(" C H A P T E R F I V E")]),e._v(" "),a("p",[a("strong",[e._v("Knowing What to Comment")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("45\n")])])]),a("p",[e._v("The goal of this chapter is to help you realize what you should be commenting. You might")]),e._v(" "),a("p",[e._v("think the purpose of commenting is to “explain what the code does,” but that is just a small")]),e._v(" "),a("p",[e._v("part of it.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("K E Y I D E A")]),e._v(" "),a("p",[e._v("The purpose of commenting is to help the reader know as much as the writer did.")])]),e._v(" "),a("p",[e._v("When you’re writing code, you have a lot of valuable information in your head. When other")]),e._v(" "),a("p",[e._v("people read your code, that information is lost—all they have is the code in front of them.")]),e._v(" "),a("p",[e._v("In this chapter, we’ll show you many examples of when to write down that information in")]),e._v(" "),a("p",[e._v("your head. We’ve left out the more mundane points about commenting; instead, we’ve focused")]),e._v(" "),a("p",[e._v("on the more interesting and “underserved” aspects of commenting.")]),e._v(" "),a("p",[e._v("We’ve organized the chapter into the following areas:")]),e._v(" "),a("ul",[a("li",[e._v("Knowing what "),a("em",[e._v("not")]),e._v(" to comment")]),e._v(" "),a("li",[e._v("Recording your thoughts as you code")]),e._v(" "),a("li",[e._v("Putting yourself in the readers’ shoes, to imagine what they’ll need to know")])]),e._v(" "),a("p",[a("strong",[e._v("46")]),e._v(" CHAPTER FIVE")]),e._v(" "),a("h3",{attrs:{id:"what-not-to-comment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-not-to-comment"}},[e._v("#")]),e._v(" What NOT to Comment")]),e._v(" "),a("p",[e._v("Reading a comment takes time away from reading the actual code, and each comment takes")]),e._v(" "),a("p",[e._v("up space on the screen. That is, it better be worth it. So where do you draw the line between")]),e._v(" "),a("p",[e._v("a worthless comment and a good one?")]),e._v(" "),a("p",[e._v("All of the comments in this code are worthless:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// The class definition for Account\nclass Account {\npublic:\n// Constructor\nAccount();\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Set the profit member to a new value\nvoid SetProfit(double profit);\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Return the profit from this Account\ndouble GetProfit();\n};\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("KNOWING WHAT TO COMMENT 47\n")])])]),a("p",[e._v("These comments are worthless because they don’t provide any new information or help the")]),e._v(" "),a("p",[e._v("reader understand the code better.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("K E Y I D E A")]),e._v(" "),a("p",[e._v("Don’t comment on facts that can be derived quickly from the code itself.")])]),e._v(" "),a("p",[e._v("The word “quickly” is an important distinction, though. Consider the comment for this Python")]),e._v(" "),a("p",[e._v("code:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# remove everything after the second '*'\nname = '*'.join(line.split('*')[:2])\n")])])]),a("p",[e._v("Technically, this comment doesn’t present any “new information” either. If you look at the")]),e._v(" "),a("p",[e._v("code itself, you’ll eventually figure out what it’s doing. But for most programmers, reading the")]),e._v(" "),a("p",[e._v("commented code is much faster than understanding the code without it.")]),e._v(" "),a("p",[a("strong",[e._v("Don’t Comment Just for the Sake of Commenting")])]),e._v(" "),a("p",[e._v("Some professors require their students to have a comment for each function in their homework")]),e._v(" "),a("p",[e._v("code. As a result, some programmers feel guilty about leaving a function naked without")]),e._v(" "),a("p",[e._v("comments and end up rewriting the function’s name and arguments in sentence form:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Find the Node in the given subtree, with the given name, using the given depth.\nNode* FindNodeInSubtree(Node* subtree, string name, int depth);\n")])])]),a("p",[a("strong",[e._v("48")]),e._v(" CHAPTER FIVE")]),e._v(" "),a("p",[e._v("This one falls into the “worthless comments” category—the function’s declaration and the")]),e._v(" "),a("p",[e._v("comment are virtually the same. This comment should be either removed or improved.")]),e._v(" "),a("p",[e._v("If you want to have a comment here, it might as well elaborate on more important details:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Find a Node with the given 'name' or return NULL.\n// If depth <= 0, only 'subtree' is inspected.\n// If depth == N, only 'subtree' and N levels below are inspected.\nNode* FindNodeInSubtree(Node* subtree, string name, int depth);\n")])])]),a("p",[a("strong",[e._v("Don’t Comment Bad Names—Fix the Names Instead")])]),e._v(" "),a("p",[e._v("A comment shouldn’t have to make up for a bad name. For example, here’s an innocent-")]),e._v(" "),a("p",[e._v("looking comment for a function named CleanReply():")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Enforce limits on the Reply as stated in the Request,\n// such as the number of items returned, or total byte size, etc.\nvoid CleanReply(Request request, Reply reply);\n")])])]),a("p",[e._v("Most of the comment is simply explaining what “clean” means. Instead, the phrase “enforce")]),e._v(" "),a("p",[e._v("limits” should be moved into the function name:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Make sure 'reply' meets the count/byte/etc. limits from the 'request'\nvoid EnforceLimitsFromRequest (Request request, Reply reply);\n")])])]),a("p",[e._v("This function name is more “self-documenting.” A good name is better than a good comment")]),e._v(" "),a("p",[e._v("because it will be seen everywhere the function is used.")]),e._v(" "),a("p",[e._v("Here is another example of a comment for a poorly named function:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Releases the handle for this key. This doesn't modify the actual registry.\nvoid DeleteRegistry(RegistryKey* key);\n")])])]),a("p",[e._v("The name DeleteRegistry() sounds like a dangerous function (it "),a("em",[e._v("deletes")]),e._v(" the registry?!). The")]),e._v(" "),a("p",[e._v("comment “This doesn’t modify the actual registry” is trying to clear up the confusion.")]),e._v(" "),a("p",[e._v("Instead, we could use a more self-documenting name like:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("void ReleaseRegistryHandle (RegistryKey* key);\n")])])]),a("p",[e._v("In general, you don’t want “crutch comments”—comments that are trying to make up for the")]),e._v(" "),a("p",[e._v("unreadability of the code. Coders often state this rule as "),a("strong",[e._v("good code > bad code + good")])]),e._v(" "),a("p",[a("strong",[e._v("comments.")])]),e._v(" "),a("h3",{attrs:{id:"recording-your-thoughts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recording-your-thoughts"}},[e._v("#")]),e._v(" Recording Your Thoughts")]),e._v(" "),a("p",[e._v("Now that you know what "),a("em",[e._v("not")]),e._v(" to comment, let’s discuss what "),a("em",[e._v("should")]),e._v(" be commented (but often")]),e._v(" "),a("p",[e._v("isn’t).")]),e._v(" "),a("p",[e._v("A lot of good comments can come out of simply “recording your thoughts”—that is, the")]),e._v(" "),a("p",[e._v("important thoughts you had as you were writing the code.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("KNOWING WHAT TO COMMENT 49\n")])])]),a("p",[a("strong",[e._v("Include “Director Commentary”")])]),e._v(" "),a("p",[e._v("Movies often have a “director commentary” track where the filmmakers give their insights and")]),e._v(" "),a("p",[e._v("tell stories to help you understand how the film was made. Similarly, you should include")]),e._v(" "),a("p",[e._v("comments to record valuable insights about the code.")]),e._v(" "),a("p",[e._v("Here’s an example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Surprisingly, a binary tree was 40% faster than a hash table for this data.\n// The cost of computing a hash was more than the left/right comparisons.\n")])])]),a("p",[e._v("This comment teaches the reader something and stops any would-be optimizer from wasting")]),e._v(" "),a("p",[e._v("their time.")]),e._v(" "),a("p",[e._v("Here’s another example:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// This heuristic might miss a few words. That's OK; solving this 100% is hard.\n")])])]),a("p",[e._v("Without this comment, the reader might think there’s a bug and might waste time trying to")]),e._v(" "),a("p",[e._v("come up with test cases that make it fail, or go off and try to fix the bug.")]),e._v(" "),a("p",[e._v("A comment can also explain why the code isn’t in great shape:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// This class is getting messy. Maybe we should create a 'ResourceNode' subclass to\n// help organize things.\n")])])]),a("p",[e._v("This comment acknowledges that the code is messy but also encourages the next person to fix")]),e._v(" "),a("p",[e._v("it (with specifics on how to get started). Without the comment, many readers would be")]),e._v(" "),a("p",[e._v("intimidated by the messy code and afraid to touch it.")]),e._v(" "),a("p",[a("strong",[e._v("Comment the Flaws in Your Code")])]),e._v(" "),a("p",[e._v("Code is constantly evolving and is bound to have flaws along the way. Don’t be embarrassed")]),e._v(" "),a("p",[e._v("to document those flaws. For example, noting when improvements should be made:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// TODO: use a faster algorithm\n")])])]),a("p",[e._v("or when code is incomplete:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// TODO(dustin): handle other image formats besides JPEG\n")])])]),a("p",[e._v("There are a number of markers that have become popular among programmers:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Marker Typical meaning\nTODO: Stuff I haven’t gotten around to yet\nFIXME: Known-broken code here\nHACK: Admittedly inelegant solution to a problem\nXXX: Danger! major problem here\n")])])]),a("p",[a("strong",[e._v("50")]),e._v(" CHAPTER FIVE")]),e._v(" "),a("p",[e._v("Your team might have specific conventions for when/if to use these markers. For example,")]),e._v(" "),a("p",[e._v("TODO: might be reserved for show-stopping issues. If so, then for more minor flaws you could")]),e._v(" "),a("p",[e._v("use something like todo: (lower case) or maybe-later: instead.")]),e._v(" "),a("p",[e._v("The important thing is that you should always feel free to comment on your thoughts about")]),e._v(" "),a("p",[e._v("how the code should change in the future. Comments like these give readers valuable insight")]),e._v(" "),a("p",[e._v("into the quality and state of the code and might even give them some direction on how to")]),e._v(" "),a("p",[e._v("improve it.")]),e._v(" "),a("p",[a("strong",[e._v("Comment on Your Constants")])]),e._v(" "),a("p",[e._v("When defining a constant, there is often a “story” for what that constant does or why it has")]),e._v(" "),a("p",[e._v("that specific value. For example, you might see this constant in your code:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NUM_THREADS = 8\n")])])]),a("p",[e._v("It may not seem like this line needs a comment, but it’s likely that the programmer who chose")]),e._v(" "),a("p",[e._v("it knows more about it:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NUM_THREADS = 8 # as long as it's >= 2 * num_processors, that's good enough.\n")])])]),a("p",[e._v("Now the person reading the code has some guidance on how to adjust that value (e.g., setting")]),e._v(" "),a("p",[e._v("it to 1 is probably too low, and setting it to 50 is overkill).")]),e._v(" "),a("p",[e._v("Or sometimes the exact value of a constant isn’t important at all. A comment to this effect is")]),e._v(" "),a("p",[e._v("still useful:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Impose a reasonable limit - no human can read that much anyway.\nconst int MAX_RSS_SUBSCRIPTIONS = 1000;\n")])])]),a("p",[e._v("Sometimes it’s a value that’s been highly tuned, and probably shouldn’t be adjusted much:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("image_quality = 0.72; // users thought 0.72 gave the best size/quality tradeoff\n")])])]),a("p",[e._v("In all these examples, you might not have thought to add comments, but they’re quite helpful.")]),e._v(" "),a("p",[e._v("There are some constants that don’t need a comment, because their name is clear enough (e.g.,")]),e._v(" "),a("p",[e._v("SECONDS_PER_DAY). But in our experience, most constants could be improved by adding a")]),e._v(" "),a("p",[e._v("comment. It’s just a matter of jotting down what you were thinking about when you decided")]),e._v(" "),a("p",[e._v("on that constant’s value.")]),e._v(" "),a("h3",{attrs:{id:"put-yourself-in-the-reader-s-shoes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#put-yourself-in-the-reader-s-shoes"}},[e._v("#")]),e._v(" Put Yourself in the Reader’s Shoes")]),e._v(" "),a("p",[e._v("A general technique we use in this book is to "),a("strong",[e._v("imagine what your code looks like to an")])]),e._v(" "),a("p",[a("strong",[e._v("outsider")]),e._v(" —someone who isn’t as intimately familiar with your project as you are. This")]),e._v(" "),a("p",[e._v("technique is especially useful to help you recognize what needs commenting.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("KNOWING WHAT TO COMMENT 51\n")])])]),a("p",[a("strong",[e._v("Anticipating Likely Questions")])]),e._v(" "),a("p",[e._v("When someone else reads your code, there are parts likely to make them think, "),a("em",[e._v("Huh? What’s")])]),e._v(" "),a("p",[a("em",[e._v("this all about?")]),e._v(" Your job is to comment those parts.")]),e._v(" "),a("p",[e._v("For example, take a look at the definition of Clear():")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("struct Recorder {\nvector<float> data;\n...\nvoid Clear() {\nvector<float>().swap(data); // Huh? Why not just data.clear()?\n}\n};\n")])])]),a("p",[e._v("When most C++ programmers see this code, they think, "),a("em",[e._v("Why didn’t he just do data.clear() instead")])]),e._v(" "),a("p",[a("em",[e._v("of swapping with an empty vector?")]),e._v(" Well, it turns out that this is the only way to force a vector to")]),e._v(" "),a("p",[e._v("truly relinquish its memory to the memory allocator. It’s a C++ detail that isn’t well known.")]),e._v(" "),a("p",[e._v("The bottom line is that it should be commented:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// Force vector to relinquish its memory (look up "STL swap trick")\nvector<float>().swap(data);\n')])])]),a("p",[a("strong",[e._v("52")]),e._v(" CHAPTER FIVE")]),e._v(" "),a("p",[a("strong",[e._v("Advertising Likely Pitfalls")])]),e._v(" "),a("p",[e._v("When documenting a function or class, a good question to ask yourself is, "),a("em",[e._v("What is surprising")])]),e._v(" "),a("p",[a("em",[e._v("about this code? How might it be misused?")]),e._v(" Basically, you want to “think ahead” and anticipate the")]),e._v(" "),a("p",[e._v("problems that people might run into when using your code.")]),e._v(" "),a("p",[e._v("For example, suppose you wrote a function that sends an email to a given user:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("void SendEmail(string to, string subject, string body);\n")])])]),a("p",[e._v("The implementation of this function involves connecting to an external email service, which")]),e._v(" "),a("p",[e._v("might take up to a whole second, or possibly longer. Someone who is writing a web application")]),e._v(" "),a("p",[e._v("might not realize this and mistakenly call this function while handling an HTTP request. (Doing")]),e._v(" "),a("p",[e._v("this would cause their web application to “hang” if the email service is down.)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("KNOWING WHAT TO COMMENT 53\n")])])]),a("p",[e._v("To prevent this likely mishap, you should comment on this “implementation detail”:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Calls an external service to deliver email. (Times out after 1 minute.)\nvoid SendEmail(string to, string subject, string body);\n")])])]),a("p",[e._v("Here is another example: suppose you have a FixBrokenHtml() function that attempts to rewrite")]),e._v(" "),a("p",[e._v("broken HTML by inserting missing closing tags and the like:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def FixBrokenHtml(html): ...\n")])])]),a("p",[e._v("The function works great, except for the caveat that its running time blows up when there are")]),e._v(" "),a("p",[e._v("deeply nested and unmatched tags. For nasty HTML inputs, this function could take "),a("em",[e._v("minutes")]),e._v(" to")]),e._v(" "),a("p",[e._v("execute.")]),e._v(" "),a("p",[e._v("Rather than let the user discover this later on his own, it’s better to announce this upfront:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Runtime is O(number_tags * average_tag_depth), so watch out for badly nested inputs.\ndef FixBrokenHtml(html): ...\n")])])]),a("p",[a("strong",[e._v("“Big Picture” Comments")])]),e._v(" "),a("p",[e._v("One of the hardest things for a new team member to understand is the “big picture”—how")]),e._v(" "),a("p",[e._v("classes interact, how data flows through the whole system, and where the entry points are.")]),e._v(" "),a("p",[e._v("The person who designed the system often forgets to comment about this stuff because he’s so")]),e._v(" "),a("p",[e._v("intimately involved with it.")]),e._v(" "),a("p",[e._v("Consider this thought experiment: "),a("strong",[e._v("someone new just joined your team, she’s sitting next")])]),e._v(" "),a("p",[a("strong",[e._v("to you, and you need to get her familiar with the codebase.")])]),e._v(" "),a("p",[a("strong",[e._v("54")]),e._v(" CHAPTER FIVE")]),e._v(" "),a("p",[e._v("As you’re giving her a tour of the codebase, you might point out certain files or classes and say")]),e._v(" "),a("p",[e._v("things like:")]),e._v(" "),a("ul",[a("li",[e._v("“This is the glue code between our business logic and the database. None of the application\ncode should use this directly.”")]),e._v(" "),a("li",[e._v("“This class looks complicated, but it’s really just a smart cache. It doesn’t know anything\nabout the rest of the system.”")])]),e._v(" "),a("p",[e._v("After a minute of casual conversation, your new team member will know much more than")]),e._v(" "),a("p",[e._v("she would from reading the source by herself.")]),e._v(" "),a("p",[a("strong",[e._v("This is exactly the type of information that should be included as high-level")])]),e._v(" "),a("p",[a("strong",[e._v("comments.")])]),e._v(" "),a("p",[e._v("Here’s a simple example of a file-level comment:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// This file contains helper functions that provide a more convenient interface to our\n// file system. It handles file permissions and other nitty-gritty details.\n")])])]),a("p",[e._v("Don’t get overwhelmed by the thought that you have to write extensive, formal")]),e._v(" "),a("p",[e._v("documentation. "),a("strong",[e._v("A few well-chosen sentences are better than nothing at all.")])]),e._v(" "),a("p",[a("strong",[e._v("Summary Comments")])]),e._v(" "),a("p",[e._v("Even deep inside a function, it’s a good idea to comment on the “bigger picture.” Here’s an")]),e._v(" "),a("p",[e._v("example of a comment that neatly summarizes the low-level code below it:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Find all the items that customers purchased for themselves.\nfor customer_id in all_customers:\nfor sale in all_sales[customer_id].sales:\nif sale.recipient == customer_id:\n...\n")])])]),a("p",[e._v("Without this comment, reading each line of code is a bit of a mystery. (“I see we’re iterating")]),e._v(" "),a("p",[e._v("through all_customers ... but what for?”)")]),e._v(" "),a("p",[e._v("It’s especially helpful to have these summary comments in longer functions where there are a")]),e._v(" "),a("p",[e._v("few large “chunks” inside:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("def GenerateUserReport():\n# Acquire a lock for this user\n...\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Read user's info from the database\n...\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Write info to a file\n...\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Release the lock for this user\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("KNOWING WHAT TO COMMENT 55\n")])])]),a("p",[e._v("These comments also act as a bulleted summary of what the function does, so the reader can")]),e._v(" "),a("p",[e._v("get the gist of what the function does before diving into details. (If these chunks are easily")]),e._v(" "),a("p",[e._v("separable, you might just make them functions of their own. As we mentioned before, good")]),e._v(" "),a("p",[e._v("code is better than bad code with good comments.)")]),e._v(" "),a("p",[e._v("SHOULD YOU COMMENT THE WHAT, THE WHY, OR THE HOW?")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("You may have heard advice like, “Comment the why , not the what (or the how).” Although catchy,\nwe feel these statements are too simplistic and mean different things to different people.\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Our advice is to do whatever helps the reader understand the code more easily. This may involve\ncommenting the what , the how , or the why (or all three).\n")])])]),a("h3",{attrs:{id:"final-thoughts-getting-over-writer-s-block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#final-thoughts-getting-over-writer-s-block"}},[e._v("#")]),e._v(" Final Thoughts—Getting Over Writer’s Block")]),e._v(" "),a("p",[e._v("A lot of coders don’t like to write comments because it feels like a lot of work to write a good")]),e._v(" "),a("p",[e._v("one. When writers have this sort of “writer’s block,” the best solution is to just start writing.")]),e._v(" "),a("p",[e._v("So the next time you’re hesitating to write a comment, just go ahead and comment what you’re")]),e._v(" "),a("p",[e._v("thinking, however half-baked it may be.")]),e._v(" "),a("p",[e._v("For example, suppose you’re working on a function and think to yourself, "),a("em",[e._v("Oh crap, this stuff will")])]),e._v(" "),a("p",[a("em",[e._v("get tricky if there are ever duplicates in this list.")]),e._v(" Just write that down:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Oh crap, this stuff will get tricky if there are ever duplicates in this list.\n")])])]),a("p",[e._v("See, was that so hard? It’s actually not that bad of a comment—certainly better than nothing.")]),e._v(" "),a("p",[e._v("The language is a little vague though. To fix it, we can just go through each phrase and replace")]),e._v(" "),a("p",[e._v("it with something more specific:")]),e._v(" "),a("ul",[a("li",[e._v("By “oh crap,” you really mean “Careful: this is something to watch out for.”")]),e._v(" "),a("li",[e._v("By “this stuff,” you mean “the code that’s handling this input.”")]),e._v(" "),a("li",[e._v("By “will get tricky,” you mean “will be hard to implement.”")])]),e._v(" "),a("p",[e._v("The new comment might be:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// Careful: this code doesn't handle duplicates in the list (because that's hard to do)\n")])])]),a("p",[e._v("Notice that we’ve broken down the task of writing a comment into these simpler steps:")]),e._v(" "),a("ol",[a("li",[e._v("Write down whatever comment is on your mind.")]),e._v(" "),a("li",[e._v("Read the comment, and see what (if anything) needs to be improved.")]),e._v(" "),a("li",[e._v("Make improvements.")])]),e._v(" "),a("p",[a("strong",[e._v("56")]),e._v(" CHAPTER FIVE")]),e._v(" "),a("p",[e._v("As you comment more often, you’ll find that the quality of comments from step 1 gets better")]),e._v(" "),a("p",[e._v("and better and eventually might not need fixing at all. And by commenting early and often,")]),e._v(" "),a("p",[e._v("you avoid the unpleasant situation of needing to write a bunch of comments at the end.")]),e._v(" "),a("h3",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),a("p",[e._v("The purpose of a comment is to help the reader know what the writer knew when writing the")]),e._v(" "),a("p",[e._v("code. This whole chapter is about realizing all the not-so-obvious nuggets of information you")]),e._v(" "),a("p",[e._v("have about the code and writing those down.")]),e._v(" "),a("p",[e._v("What "),a("em",[e._v("not")]),e._v(" to comment:")]),e._v(" "),a("ul",[a("li",[e._v("Facts that can be quickly derived from the code itself.")]),e._v(" "),a("li",[e._v("“Crutch comments” that make up for bad code (such as a bad function name)—fix the\ncode instead.")])]),e._v(" "),a("p",[e._v("Thoughts you should be recording include:")]),e._v(" "),a("ul",[a("li",[e._v("Insights about why code is one way and not another (“director commentary”).")]),e._v(" "),a("li",[e._v("Flaws in your code, by using markers like TODO: or XXX:.")]),e._v(" "),a("li",[e._v("The “story” for how a constant got its value.")])]),e._v(" "),a("p",[e._v("Put yourself in the reader’s shoes:")]),e._v(" "),a("ul",[a("li",[e._v("Anticipate which parts of your code will make readers say “Huh?” and comment those.")]),e._v(" "),a("li",[e._v("Document any surprising behavior an average reader wouldn’t expect.")]),e._v(" "),a("li",[e._v("Use “big picture” comments at the file/class level to explain how all the pieces fit together.")]),e._v(" "),a("li",[e._v("Summarize blocks of code with comments so that the reader doesn’t get lost in the details.")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("KNOWING WHAT TO COMMENT 57\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);