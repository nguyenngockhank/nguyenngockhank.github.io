(window.webpackJsonp=window.webpackJsonp||[]).push([[210],{1342:function(t,s,e){"use strict";e.r(s);var a=e(7),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"rate-limiter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rate-limiter"}},[t._v("#")]),t._v(" Rate limiter")]),t._v(" "),e("p",[e("strong",[t._v("Algorithms")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("Token bucket")]),t._v(" "),e("li",[t._v("Leaking bucket")]),t._v(" "),e("li",[t._v("Fixed window counter")]),t._v(" "),e("li",[t._v("Sliding window log")]),t._v(" "),e("li",[t._v("Sliding window counter")])]),t._v(" "),e("h2",{attrs:{id:"token-bucket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#token-bucket"}},[t._v("#")]),t._v(" Token bucket")]),t._v(" "),e("p",[t._v("A token bucket is a container that has pre-defined capacity. Tokens are put in the bucket at preset rates periodically. Once the bucket is full, no more tokens are added.")]),t._v(" "),e("p",[t._v("E.g: the token bucket capacity is 4. The refiller puts 2 tokens into the bucket every second. Once the bucket is full, extra tokens will overflow.")]),t._v(" "),e("p",[t._v("Each request consumes one token. When a request arrives, we check if there are enough tokens in the bucket.")]),t._v(" "),e("ul",[e("li",[t._v("If there are enough tokens, we take one token out for each request, and the request goes through.")]),t._v(" "),e("li",[t._v("If there are not enough tokens, the request is dropped.")])]),t._v(" "),e("p",[t._v("The token bucket algorithm takes two parameters:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Bucket size")]),t._v(": the maximum number of tokens allowed in the bucket")]),t._v(" "),e("li",[e("strong",[t._v("Refill rate")]),t._v(": number of tokens put into the bucket every second")])]),t._v(" "),e("p",[t._v("How many buckets do we need? This varies, and it depends on the rate-limiting rules. Here are a few examples.")]),t._v(" "),e("ul",[e("li",[t._v("It is usually necessary to have "),e("strong",[t._v("different buckets for different API endpoints")]),t._v(". For instance, if a user is allowed to make 1 post per second, add 150 friends per day, and like 5 posts per second, 3 buckets are required for each user.")]),t._v(" "),e("li",[t._v("If we need to throttle requests based on IP addresses, each IP address requires a bucket")]),t._v(" "),e("li",[t._v("If the system allows a maximum of 10,000 requests per second, it makes sense to have a global bucket shared by all requests.")])]),t._v(" "),e("p",[e("strong",[t._v("Pros")]),t._v(":")]),t._v(" "),e("ul",[e("li",[t._v("The algorithm is easy to implement.")]),t._v(" "),e("li",[t._v("Memory efficient.")]),t._v(" "),e("li",[t._v("Token bucket allows a burst of traffic for short periods. A request can go through as long as there are tokens left.\n"),e("strong",[t._v("Cons")]),t._v(":")]),t._v(" "),e("li",[t._v("Two parameters in the algorithm are bucket size and token refill rate. However, it might be challenging to tune them properly.")])]),t._v(" "),e("h3",{attrs:{id:"leaking-bucket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leaking-bucket"}},[t._v("#")]),t._v(" Leaking bucket")]),t._v(" "),e("p",[t._v("// ... todo")]),t._v(" "),e("h3",{attrs:{id:"sliding-window-counter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sliding-window-counter"}},[t._v("#")]),t._v(" Sliding window counter")]),t._v(" "),e("p",[e("strong",[t._v("Redis lua example:")])]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" totalHits "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INCR"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" timeToExpire "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PTTL"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" timeToExpire "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PEXPIRE"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" KEYS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tonumber")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGV"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    timeToExpire "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tonumber")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ARGV"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" totalHits"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeToExpire "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" scriptSrc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" results"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("redis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EVAL'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    scriptSrc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ttl "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"bulkhead-vs-rate-limiter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bulkhead-vs-rate-limiter"}},[t._v("#")]),t._v(" Bulkhead vs Rate Limiter")]),t._v(" "),e("p",[e("strong",[t._v("Bulkhead")])]),t._v(" "),e("p",[t._v("Limit number of concurrent calls at a time")]),t._v(" "),e("p",[t._v("Ex: Allow 5 concurrent calls at a time")]),t._v(" "),e("p",[e("strong",[t._v("Rate Limiter")])]),t._v(" "),e("p",[t._v("Limit number total calls in given period of time")]),t._v(" "),e("p",[t._v("Ex: Allow 5 calls every 2 second.")])])}),[],!1,null,null,null);s.default=n.exports}}]);