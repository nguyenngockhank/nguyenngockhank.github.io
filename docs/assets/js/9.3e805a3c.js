(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{488:function(t,e,a){t.exports=a.p+"assets/img/nosql-data-model.85556a21.png"},489:function(t,e,a){t.exports=a.p+"assets/img/polyglot.cdb5e015.png"},490:function(t,e,a){t.exports=a.p+"assets/img/sql-nosql.8a9a364b.png"},556:function(t,e,a){"use strict";a.r(e);var r=a(9),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"nosql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql"}},[t._v("#")]),t._v(" NoSQL")]),t._v(" "),r("h2",{attrs:{id:"definition"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#definition"}},[t._v("#")]),t._v(" Definition")]),t._v(" "),r("p",[r("em",[t._v("There's no strong definition of the concept out there, no trademarks, no standard group, not even a manifesto.")])]),t._v(" "),r("p",[t._v("Some characteristics are common amongst these databases, but none are definitional.")]),t._v(" "),r("ul",[r("li",[t._v("Not using the relational model (nor the SQL language)")]),t._v(" "),r("li",[t._v("Open source")]),t._v(" "),r("li",[t._v("Designed to run on large clusters")]),t._v(" "),r("li",[t._v("Based on the needs of 21st century web properties")]),t._v(" "),r("li",[t._v("No schema, allowing fields to be added to any record without controls")])]),t._v(" "),r("h2",{attrs:{id:"data-models"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#data-models"}},[t._v("#")]),t._v(" Data Models")]),t._v(" "),r("p",[r("img",{attrs:{src:a(488),alt:"Data Model"}})]),t._v(" "),r("ul",[r("li",[t._v("Document")]),t._v(" "),r("li",[t._v("Column-family")]),t._v(" "),r("li",[t._v("Key-value")]),t._v(" "),r("li",[t._v("Graph")])]),t._v(" "),r("h3",{attrs:{id:"aggregate-data-model"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#aggregate-data-model"}},[t._v("#")]),t._v(" Aggregate Data Model")]),t._v(" "),r("p",[t._v("An aggregate is a collection of data that we interact with as a unit. Aggregates form the boundaries for ACID operations with the database.")]),t._v(" "),r("p",[t._v("Key-value, document, and column-family databases can all be seen as forms of aggregate-oriented database.")]),t._v(" "),r("p",[t._v("Aggregates make it easier for the database to manage data storage over clusters.")]),t._v(" "),r("p",[t._v("Aggregate-oriented databases "),r("strong",[t._v("work best when most data interaction is done with the same aggregate")]),t._v("; aggregate-ignorant databases are better when interactions use data organized in many different formations.")]),t._v(" "),r("h2",{attrs:{id:"polygot-persistence"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#polygot-persistence"}},[t._v("#")]),t._v(" Polygot Persistence")]),t._v(" "),r("p",[r("img",{attrs:{src:a(489),alt:"Polygot Database"}})]),t._v(" "),r("p",[t._v("Polyglot persistence is about using different data storage technologies to handle varying data storage needs.")]),t._v(" "),r("p",[t._v("Polyglot persistence can apply across an enterprise or within a single application.")]),t._v(" "),r("p",[t._v("Encapsulating data access into services reduces the impact of data storage choices on other parts of a system.")]),t._v(" "),r("p",[t._v("Adding more data storage technologies increases complexity in programming and operations, so the advantages of a good data storage fit need to be weighed against this complexity.")]),t._v(" "),r("h2",{attrs:{id:"sql-vs-nosql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql-vs-nosql"}},[t._v("#")]),t._v(" Sql vs. NoSql")]),t._v(" "),r("p",[r("img",{attrs:{src:a(490),alt:"SQL vs NoSQL"}})]),t._v(" "),r("table",[r("thead",[r("tr",[r("th"),t._v(" "),r("th",[t._v("NoSQL")]),t._v(" "),r("th",[t._v("SQL")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[t._v("Model")])]),t._v(" "),r("td",[t._v("Non-relational")]),t._v(" "),r("td",[t._v("Relational")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("Stores data in JSON documents. key/value pairs, wide column stores, or graphs")]),t._v(" "),r("td",[t._v("Stores data in a table")])]),t._v(" "),r("tr",[r("td",[r("strong",[t._v("Data")])]),t._v(" "),r("td",[t._v("Offers flexibility as not every record needs to store the same properties")]),t._v(" "),r("td",[t._v("Great for solutions where every record has the same properties")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("New properties can be added on the fly")]),t._v(" "),r("td",[t._v("Adding a new property may require altering schemas or backfilling data")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("Relationships are often captured by denormalizing data and presenting all data for an object in a single record")]),t._v(" "),r("td",[t._v("Relationships are often captured in normalized model using joins to resolve references across tables")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("Good for semi-structured, complex or nested data")]),t._v(" "),r("td",[t._v("Good for structured data")])]),t._v(" "),r("tr",[r("td",[r("strong",[t._v("Schema")])]),t._v(" "),r("td",[t._v("Dynamic or flexible schemas")]),t._v(" "),r("td",[t._v("Strict schema")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("Database is schema-agnostic and the schema is dictated by the application. This allows for agility and highly itertive development")]),t._v(" "),r("td",[t._v("Schema must be maintained and kept in sync between application and database")])]),t._v(" "),r("tr",[r("td",[r("strong",[t._v("Transactions")])]),t._v(" "),r("td",[t._v("ACID transaction support varies per solution")]),t._v(" "),r("td",[t._v("Supports ACID transactions")])]),t._v(" "),r("tr",[r("td",[r("strong",[t._v("Consistency & Availability")])]),t._v(" "),r("td",[t._v("Eventual to strong consistency supported, depending on solution")]),t._v(" "),r("td",[t._v("Strong consistency enforced")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("Consistency, availability, and performance can be traded to meet the needs of the application (CAP theorem)")]),t._v(" "),r("td",[t._v("Consistency is prioritized over availability and performance")])]),t._v(" "),r("tr",[r("td",[r("strong",[t._v("Performance")])]),t._v(" "),r("td",[t._v("Performance can be maximized by reducing consistency, if needed")]),t._v(" "),r("td",[t._v("Insert and update performance is dependent upon how fast a write is committed, as strong consistency is enforced. Performance can be maximized by using scaling up available resources and using in-memory structures.")])]),t._v(" "),r("tr",[r("td"),t._v(" "),r("td",[t._v("All information about an entity is typically in a single record, so an update can happen in one operation")]),t._v(" "),r("td",[t._v("Information about an entity may be spread across many tables or rows, requiring many joins to complete an update or a query")])]),t._v(" "),r("tr",[r("td",[r("strong",[t._v("Scale")])]),t._v(" "),r("td",[t._v("Scaling is typically achieved horizontally with data partitioned to span servers")]),t._v(" "),r("td",[t._v("Scaling is typically achieved vertically with more server resources")])])])]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("SQL")]),t._v(": Structured Query Language")]),t._v(" "),r("li",[r("strong",[t._v("UnQL")]),t._v(": Unstructured Query Language")]),t._v(" "),r("li",[r("strong",[t._v("ACID")]),t._v(": Atomicity, Consistency, Isolation and Durability")]),t._v(" "),r("li",[r("strong",[t._v("CAP")]),t._v(": Consistency, Availability and Partition tolerance")])]),t._v(" "),r("h2",{attrs:{id:"references"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://martinfowler.com/articles/nosqlKeyPoints.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key Points from NoSQL Distilled"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"introduction-to-nosql-martin-fowler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction-to-nosql-martin-fowler"}},[t._v("#")]),t._v(" Introduction to NoSQL - Martin Fowler")]),t._v(" "),r("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/qI_g07C_Q5I",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}})])}),[],!1,null,null,null);e.default=o.exports}}]);