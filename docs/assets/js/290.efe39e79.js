(window.webpackJsonp=window.webpackJsonp||[]).push([[290],{911:function(e,n,t){"use strict";t.r(n);var a=t(7),o=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"the-art-of-readable-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-art-of-readable-code"}},[e._v("#")]),e._v(" The Art of Readable Code")]),e._v(" "),t("h2",{attrs:{id:"table-of-c-o-n-t-e-n-t-s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#table-of-c-o-n-t-e-n-t-s"}},[e._v("#")]),e._v(" TABLE OF C O N T E N T S")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c1.html"}},[e._v("1 CODE SHOULD BE EASY TO UNDERSTAND PREFACE")]),e._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c1.html#what-makes-code-better"}},[e._v("What Makes Code “Better”?")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c1.html#"}},[e._v("The Fundamental Theorem of Readability")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c1.html#is-smaller-always-better"}},[e._v("Is Smaller Always Better?")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c1.html#does-time-till-understanding-conflict-with-other-goals"}},[e._v("Does Time-Till-Understanding Conflict with Other Goals?")])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c1.html#the-hard-part"}},[e._v("The Hard Part")])],1)])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c2.html"}},[e._v("2 PACKING INFORMATION INTO NAMES")]),e._v(" - Part One SURFACE-LEVEL IMPROVEMENTS\n"),t("ul",[t("li",[e._v("Choose Specific Words")]),e._v(" "),t("li",[e._v("Avoid Generic Names Like tmp and retval")]),e._v(" "),t("li",[e._v("Prefer Concrete Names over Abstract Names")]),e._v(" "),t("li",[e._v("Attaching Extra Information to a Name")]),e._v(" "),t("li",[e._v("How Long Should a Name Be?")]),e._v(" "),t("li",[e._v("Use Name Formatting to Convey Meaning")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c3.html"}},[e._v("3 NAMES THAT CAN’T BE MISCONSTRUED")]),e._v(" "),t("ul",[t("li",[e._v("Example: Filter()")]),e._v(" "),t("li",[e._v("Example: Clip(text, length)")]),e._v(" "),t("li",[e._v("Prefer min and max for (Inclusive) Limits")]),e._v(" "),t("li",[e._v("Prefer first and last for Inclusive Ranges")]),e._v(" "),t("li",[e._v("Prefer begin and end for Inclusive/Exclusive Ranges")]),e._v(" "),t("li",[e._v("Naming Booleans")]),e._v(" "),t("li",[e._v("Matching Expectations of Users")]),e._v(" "),t("li",[e._v("Example: Evaluating Multiple Name Candidates")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c4.html"}},[e._v("4 AESTHETICS")]),e._v(" "),t("ul",[t("li",[e._v("Why Do Aesthetics Matter?")]),e._v(" "),t("li",[e._v("Rearrange Line Breaks to Be Consistent and Compact")]),e._v(" "),t("li",[e._v("Use Methods to Clean Up Irregularity")]),e._v(" "),t("li",[e._v("Use Column Alignment When Helpful")]),e._v(" "),t("li",[e._v("Pick a Meaningful Order, and Use It Consistently")]),e._v(" "),t("li",[e._v("Organize Declarations into Blocks")]),e._v(" "),t("li",[e._v("Break Code into “Paragraphs”")]),e._v(" "),t("li",[e._v("Personal Style versus Consistency")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c5.html"}},[e._v("5 KNOWING WHAT TO COMMENT")]),e._v(" "),t("ul",[t("li",[e._v("What NOT to Comment")]),e._v(" "),t("li",[e._v("Recording Your Thoughts")]),e._v(" "),t("li",[e._v("Put Yourself in the Reader’s Shoes")]),e._v(" "),t("li",[e._v("Final Thoughts—Getting Over Writer’s Block")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c6.html"}},[e._v("6 MAKING COMMENTS PRECISE AND COMPACT")]),e._v(" "),t("ul",[t("li",[e._v("Keep Comments Compact")]),e._v(" "),t("li",[e._v("Avoid Ambiguous Pronouns")]),e._v(" "),t("li",[e._v("Polish Sloppy Sentences")]),e._v(" "),t("li",[e._v("Describe Function Behavior Precisely")]),e._v(" "),t("li",[e._v("Use Input/Output Examples That Illustrate Corner Cases")]),e._v(" "),t("li",[e._v("State the Intent of Your Code")]),e._v(" "),t("li",[e._v("“Named Function Parameter” Comments")]),e._v(" "),t("li",[e._v("Use Information-Dense Words")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c7.html"}},[e._v("7 MAKING CONTROL FLOW EASY TO READ")]),e._v(" - Part Two SIMPLIFYING LOOPS AND LOGIC\n"),t("ul",[t("li",[e._v("The Order of Arguments in Conditionals")]),e._v(" "),t("li",[e._v("The Order of if/else Blocks")]),e._v(" "),t("li",[e._v("The ?: Conditional Expression (a.k.a. “Ternary Operator”)")]),e._v(" "),t("li",[e._v("Avoid do/while Loops")]),e._v(" "),t("li",[e._v("Returning Early from a Function")]),e._v(" "),t("li",[e._v("The Infamous goto")]),e._v(" "),t("li",[e._v("Minimize Nesting")]),e._v(" "),t("li",[e._v("Can You Follow the Flow of Execution?")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c8.html"}},[e._v("8 BREAKING DOWN GIANT EXPRESSIONS")]),e._v(" "),t("ul",[t("li",[e._v("Explaining Variables")]),e._v(" "),t("li",[e._v("Summary Variables")]),e._v(" "),t("li",[e._v("Using De Morgan’s Laws")]),e._v(" "),t("li",[e._v("Abusing Short-Circuit Logic")]),e._v(" "),t("li",[e._v("Example: Wrestling with Complicated Logic")]),e._v(" "),t("li",[e._v("Breaking Down Giant Statements")]),e._v(" "),t("li",[e._v("Another Creative Way to Simplify Expressions")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[e._v("[9 VARIABLES AND READABILITY]\n"),t("ul",[t("li",[e._v("Eliminating Variables")]),e._v(" "),t("li",[e._v("Shrink the Scope of Your Variables")]),e._v(" "),t("li",[e._v("Prefer Write-Once Variables")]),e._v(" "),t("li",[e._v("A Final Example")]),e._v(" "),t("li",[e._v("Summary")])])]),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c10.html"}},[e._v("10 EXTRACTING UNRELATED SUBPROBLEMS")]),e._v(" - Part Three REORGANIZING YOUR CODE\n"),t("ul",[t("li",[e._v("Introductory Example: findClosestLocation()")]),e._v(" "),t("li",[e._v("Pure Utility Code")]),e._v(" "),t("li",[e._v("Other General-Purpose Code")]),e._v(" "),t("li",[e._v("Create a Lot of General-Purpose Code")]),e._v(" "),t("li",[e._v("Project-Specific Functionality")]),e._v(" "),t("li",[e._v("Simplifying an Existing Interface")]),e._v(" "),t("li",[e._v("Reshaping an Interface to Your Needs")]),e._v(" "),t("li",[e._v("Taking Things Too Far")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c11.html"}},[e._v("11 ONE TASK AT A TIME")]),e._v(" "),t("ul",[t("li",[e._v("Tasks Can Be Small")]),e._v(" "),t("li",[e._v("Extracting Values from an Object")]),e._v(" "),t("li",[e._v("A Larger Example")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c12.html"}},[e._v("12 TURNING THOUGHTS INTO CODE")]),e._v(" "),t("ul",[t("li",[e._v("Describing Logic Clearly")]),e._v(" "),t("li",[e._v("Knowing Your Libraries Helps")]),e._v(" "),t("li",[e._v("Applying This Method to Larger Problems")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c13.html"}},[e._v("13 WRITING LESS CODE")]),e._v(" "),t("ul",[t("li",[e._v("Don’t Bother Implementing That Feature—You Won’t Need It")]),e._v(" "),t("li",[e._v("Question and Break Down Your Requirements")]),e._v(" "),t("li",[e._v("Keeping Your Codebase Small")]),e._v(" "),t("li",[e._v("Be Familiar with the Libraries Around You")]),e._v(" "),t("li",[e._v("Example: Using Unix Tools Instead of Coding")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c14.html"}},[e._v("14 TESTING AND READABILITY")]),e._v(" - Part Four SELECTED TOPICS\n"),t("ul",[t("li",[e._v("Make Tests Easy to Read and Maintain")]),e._v(" "),t("li",[e._v("What’s Wrong with This Test?")]),e._v(" "),t("li",[e._v("Making This Test More Readable")]),e._v(" "),t("li",[e._v("Making Error Messages Readable")]),e._v(" "),t("li",[e._v("Choosing Good Test Inputs")]),e._v(" "),t("li",[e._v("Naming Test Functions")]),e._v(" "),t("li",[e._v("What Was Wrong with That Test?")]),e._v(" "),t("li",[e._v("Test-Friendly Development")]),e._v(" "),t("li",[e._v("Going Too Far")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[t("RouterLink",{attrs:{to:"/kungfu/artofcode/c15.html"}},[e._v("15 DESIGNING AND IMPLEMENTING A “MINUTE/HOUR COUNTER”")]),e._v(" "),t("ul",[t("li",[e._v("The Problem")]),e._v(" "),t("li",[e._v("Defining the Class Interface")]),e._v(" "),t("li",[e._v("Attempt 1: A Naive Solution")]),e._v(" "),t("li",[e._v("Attempt 2: Conveyor Belt Design")]),e._v(" "),t("li",[e._v("Attempt 3: A Time-Bucketed Design")]),e._v(" "),t("li",[e._v("Comparing the Three Solutions")]),e._v(" "),t("li",[e._v("Summary")])])],1),e._v(" "),t("li",[e._v("[A FURTHER READING]\n"),t("ul",[t("li",[e._v("INDEX")])])])]),e._v(" "),t("h3",{attrs:{id:"p-r-e-f-a-c-e"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#p-r-e-f-a-c-e"}},[e._v("#")]),e._v(" P R E F A C E")]),e._v(" "),t("p",[e._v("We’ve worked at highly successful software companies, with outstanding engineers, and the")]),e._v(" "),t("p",[e._v("code we encounter still has plenty of room for improvement. In fact, we’ve seen some really")]),e._v(" "),t("p",[e._v("ugly code, and you probably have too.")]),e._v(" "),t("p",[e._v("But when we see beautifully written code, it’s inspiring. Good code can teach you what’s going")]),e._v(" "),t("p",[e._v("on very quickly. It’s fun to use, and it motivates you to make your own code better.")]),e._v(" "),t("p",[t("strong",[e._v("The goal of this book is help you make your code better.")]),e._v(" And when we say “code,” we")]),e._v(" "),t("p",[e._v("literally mean the lines of code you are staring at in your editor. We’re not talking about the")]),e._v(" "),t("p",[e._v("overall architecture of your project, or your choice of design patterns. Those are certainly")]),e._v(" "),t("p",[e._v("important, but in our experience most of our day-to-day lives as programmers are spent on")]),e._v(" "),t("p",[e._v("the “basic” stuff, like naming variables, writing loops, and attacking problems down at the")]),e._v(" "),t("p",[e._v("function level. And a big part of this is reading and editing the code that’s already there. We")]),e._v(" "),t("p",[e._v("hope you’ll find this book so helpful to your day-to-day programming that you’ll recommend")]),e._v(" "),t("p",[e._v("it to everyone on your team.")]),e._v(" "),t("h3",{attrs:{id:"what-this-book-is-about"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-this-book-is-about"}},[e._v("#")]),e._v(" What This Book Is About")]),e._v(" "),t("p",[e._v("This book is about how to write code that’s highly readable. The key idea in this book is that")]),e._v(" "),t("p",[t("strong",[e._v("code should be easy to understand")]),e._v(". Specifically, your goal should be to minimize the time")]),e._v(" "),t("p",[e._v("it takes someone else to understand your code.")]),e._v(" "),t("p",[e._v("This book explains this idea and illustrates it with lots of examples from different languages,")]),e._v(" "),t("p",[e._v("including C++, Python, JavaScript, and Java. We’ve avoided any advanced language features,")]),e._v(" "),t("p",[e._v("so even if you don’t know all these languages, it should still be easy to follow along. (In our")]),e._v(" "),t("p",[e._v("experience, the concepts of readability are mostly language-independent, anyhow.)")]),e._v(" "),t("p",[e._v("Each chapter dives into a different aspect of coding and how to make it “easy to understand.”")]),e._v(" "),t("p",[e._v("The book is divided into four parts:")]),e._v(" "),t("p",[t("em",[e._v("Surface-level improvements")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Naming, commenting, and aesthetics—simple tips that apply to every line of your\ncodebase\n")])])]),t("p",[t("em",[e._v("Simplifying loops and logic")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Ways to refine the loops, logic, and variables in your program to make them easier to\nunderstand\n")])])]),t("p",[t("em",[e._v("Reorganizing your code")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Higher-level ways to organize large blocks of code and attack problems at the function level\n")])])]),t("p",[t("em",[e._v("Selected topics")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Applying “easy to understand” to testing and to a larger data structure coding example\n")])])]),t("p",[t("strong",[e._v("viii")]),e._v(" PREFACE")]),e._v(" "),t("h3",{attrs:{id:"how-to-read-this-book"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-read-this-book"}},[e._v("#")]),e._v(" How to Read This Book")]),e._v(" "),t("p",[e._v("Our book is intended to be a fun, casual read. We hope most readers will read the whole book")]),e._v(" "),t("p",[e._v("in a week or two.")]),e._v(" "),t("p",[e._v("The chapters are ordered by “difficulty”: basic topics are at the beginning, and more advanced")]),e._v(" "),t("p",[e._v("topics are at the end. However, each chapter is self-contained and can be read in isolation. So")]),e._v(" "),t("p",[e._v("feel free to skip around if you’d like.")]),e._v(" "),t("h3",{attrs:{id:"using-code-examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#using-code-examples"}},[e._v("#")]),e._v(" Using Code Examples")]),e._v(" "),t("p",[e._v("This book is here to help you get your job done. In general, you may use the code in this book")]),e._v(" "),t("p",[e._v("in your programs and documentation. You do not need to contact us for permission unless")]),e._v(" "),t("p",[e._v("you’re reproducing a significant portion of the code. For example, writing a program that uses")]),e._v(" "),t("p",[e._v("several chunks of code from this book does not require permission. Selling or distributing a")]),e._v(" "),t("p",[e._v("CD-ROM of examples from O’Reilly books does require permission. Answering a question by")]),e._v(" "),t("p",[e._v("citing this book and quoting example code does not require permission. Incorporating a")]),e._v(" "),t("p",[e._v("significant amount of example code from this book into your product’s documentation does")]),e._v(" "),t("p",[e._v("require permission.")]),e._v(" "),t("p",[e._v("We appreciate, but do not require, attribution. An attribution usually includes the title, author,")]),e._v(" "),t("p",[e._v("publisher, and ISBN. For example: “ "),t("em",[e._v("The Art of Readable Code")]),e._v(" by Dustin Boswell and Trevor")]),e._v(" "),t("p",[e._v("Foucher. Copyright 2012 Dustin Boswell and Trevor Foucher, 978-0-596-80229-5.”")]),e._v(" "),t("p",[e._v("If you feel your use of code examples falls outside fair use or the permission given above, feel")]),e._v(" "),t("p",[e._v("free to contact us at "),t("em",[e._v("permissions@oreilly.com")]),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"safari®-books-online"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#safari®-books-online"}},[e._v("#")]),e._v(" Safari® Books Online")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Safari Books Online is an on-demand digital library that lets you easily search\nover 7,500 technology and creative reference books and videos to find the\nanswers you need quickly.\n")])])]),t("p",[e._v("With a subscription, you can read any page and watch any video from our library online. Read")]),e._v(" "),t("p",[e._v("books on your cell phone and mobile devices. Access new titles before they are available for")]),e._v(" "),t("p",[e._v("print, and get exclusive access to manuscripts in development and post feedback for the")]),e._v(" "),t("p",[e._v("authors. Copy and paste code samples, organize your favorites, download chapters, bookmark")]),e._v(" "),t("p",[e._v("key sections, create notes, print out pages, and benefit from tons of other time-saving features.")]),e._v(" "),t("p",[e._v("O’Reilly Media has uploaded this book to the Safari Books Online service. To have full digital")]),e._v(" "),t("p",[e._v("access to this book and others on similar topics from O’Reilly and other publishers, sign up for")]),e._v(" "),t("p",[e._v("free at "),t("em",[t("a",{attrs:{href:"http://my.safaribooksonline.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://my.safaribooksonline.com"),t("OutboundLink")],1)]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("PREFACE ix\n")])])]),t("h3",{attrs:{id:"how-to-contact-us"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-contact-us"}},[e._v("#")]),e._v(" How to Contact Us")]),e._v(" "),t("p",[e._v("Please address comments and questions concerning this book to the publisher:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("O’Reilly Media, Inc.\n1005 Gravenstein Highway North\nSebastopol, CA 95472\n800-998-9938 (in the United States or Canada)\n707-829-0515 (international or local)\n707-829-0104 (fax)\n")])])]),t("p",[e._v("We have a web page for this book, where we list errata, examples, and any additional")]),e._v(" "),t("p",[e._v("information. You can access this page at:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("http://shop.oreilly.com/product/9780596802301.do\n")])])]),t("p",[e._v("To comment or ask technical questions about this book, send email to:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("bookquestions@oreilly.com\n")])])]),t("p",[e._v("For more information about our books, courses, conferences, and news, see our website at")]),e._v(" "),t("p",[t("em",[t("a",{attrs:{href:"http://www.oreilly.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.oreilly.com"),t("OutboundLink")],1)]),e._v(".")]),e._v(" "),t("p",[e._v("Find us on Facebook: "),t("em",[t("a",{attrs:{href:"http://facebook.com/oreilly",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://facebook.com/oreilly"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("Follow us on Twitter: "),t("em",[t("a",{attrs:{href:"http://twitter.com/oreillymedia",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://twitter.com/oreillymedia"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("Watch us on YouTube: "),t("em",[t("a",{attrs:{href:"http://www.youtube.com/oreillymedia",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.youtube.com/oreillymedia"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"acknowledgments"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#acknowledgments"}},[e._v("#")]),e._v(" Acknowledgments")]),e._v(" "),t("p",[e._v("We’d like to thank our colleagues who donated their time to review our entire manuscript,")]),e._v(" "),t("p",[e._v("including Alan Davidson, Josh Ehrlich, Rob Konigsberg, Archie Russell, Gabe W., and Asaph")]),e._v(" "),t("p",[e._v("Zemach. Any errors in the book are entirely their fault (just kidding).")]),e._v(" "),t("p",[e._v("We're grateful to the many reviewers who gave us detailed feedback on various drafts of our")]),e._v(" "),t("p",[e._v("book, including Michael Hunger, George Heineman, and Chuck Hudson.")]),e._v(" "),t("p",[e._v("We also got numerous ideas and feedback from John Blackburn, Tim Dasilva, Dennis Geels,")]),e._v(" "),t("p",[e._v("Steve Gerding, Chris Harris, Josh Hyman, Joel Ingram, Erik Mavrinac, Greg Miller, Anatole")]),e._v(" "),t("p",[e._v("Paine, and Nick White. Thanks to the numerous online commenters who reviewed our draft")]),e._v(" "),t("p",[e._v("on O’Reilly’s OFPS system.")]),e._v(" "),t("p",[e._v("Thanks to the team at O’Reilly for their endless patience and support, specifically Mary Treseler")]),e._v(" "),t("p",[e._v("(editor), Teresa Elsey (production editor), Nancy Kotary (copyeditor), Rob Romano")]),e._v(" "),t("p",[e._v("(illustrator), Jessica Hosman (tools), and Abby Fox (tools). And also to our cartoonist, Dave")]),e._v(" "),t("p",[e._v("Allred, who made our crazy cartoon ideas come to life.")]),e._v(" "),t("p",[e._v("Lastly, we’d like to thank Melissa and Suzanne, for encouraging us along the way and putting")]),e._v(" "),t("p",[e._v("up with incessant programming conversations.")]),e._v(" "),t("p",[t("strong",[e._v("x")]),e._v(" PREFACE")]),e._v(" "),t("h3",{attrs:{id:"a-p-p-e-n-d-i-x"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-p-p-e-n-d-i-x"}},[e._v("#")]),e._v(" A P P E N D I X")]),e._v(" "),t("p",[t("strong",[e._v("Further Reading")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("181\n")])])]),t("p",[e._v("We created this book by analyzing hundreds of code examples from production code to figure")]),e._v(" "),t("p",[e._v("out what works in practice. But we’ve also read many books and articles that helped us in this")]),e._v(" "),t("p",[e._v("pursuit.")]),e._v(" "),t("p",[e._v("If you’re interested in learning more, here are some resources you might like. The following")]),e._v(" "),t("p",[e._v("lists are by no means complete, but they’re a good place to start.")]),e._v(" "),t("h3",{attrs:{id:"books-on-writing-high-quality-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#books-on-writing-high-quality-code"}},[e._v("#")]),e._v(" Books on Writing High-Quality Code")]),e._v(" "),t("p",[t("em",[e._v("Code Complete: A Practical Handbook of Software Construction")]),e._v(" , 2nd edition, by Steve McConnell")]),e._v(" "),t("p",[e._v("(Microsoft Press, 2004)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A rigorous and well-researched tome on all aspects of software construction, including\ncode quality and more.\n")])])]),t("p",[t("em",[e._v("Refactoring: Improving the Design of Existing Code")]),e._v(" , by Martin Fowler et al. (Addison-Wesley")]),e._v(" "),t("p",[e._v("Professional, 1999)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A great book that talks about the philosophy of incremental code improvements and\ncontains a detailed catalog of many different refactorings, along with steps to take to make\nthese changes with less chance of breaking things.\n")])])]),t("p",[t("em",[e._v("The Practice of Programming")]),e._v(" , by Brian Kernighan and Rob Pike (Addison-Wesley Professional,")]),e._v(" "),t("ol",{attrs:{start:"1999"}},[t("li")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Discusses various aspects of programming including debugging, testing, portability, and\nperformance, with various coding examples.\n")])])]),t("p",[t("em",[e._v("The Pragmatic Programmer: From Journeyman to Master")]),e._v(" , by Andrew Hunt and David Thomas")]),e._v(" "),t("p",[e._v("(Addison-Wesley Professional, 1999)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A collection of many good programming and engineering principles, organized into short\ndiscussions.\n")])])]),t("p",[t("em",[e._v("Clean Code: A Handbook of Agile Software Craftsmanship")]),e._v(" , by Robert C. Martin (Prentice Hall, 2008)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A book similar to ours (but Java-specific); explores other topics such as error handling and\nconcurrency.\n")])])]),t("h3",{attrs:{id:"books-on-various-programming-topics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#books-on-various-programming-topics"}},[e._v("#")]),e._v(" Books on Various Programming Topics")]),e._v(" "),t("p",[t("em",[e._v("JavaScript: The Good Parts")]),e._v(" , by Douglas Crockford (O’Reilly, 2008)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("We believe this book has a similar spirit to ours, even though the book isn’t explicitly about\nreadability. It’s about using a clean subset of the JavaScript language that is less error-\nprone and easier to reason about.\n")])])]),t("p",[t("em",[e._v("Effective Java")]),e._v(" , 2nd edition, by Joshua Bloch (Prentice Hall, 2008)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A phenomenal book about making your Java programs easier to read and more bug-free.\nAlthough it’s about Java, many of the principles apply to all languages. Highly\nrecommended.\n")])])]),t("p",[t("strong",[e._v("182")]),e._v(" APPENDIX")]),e._v(" "),t("p",[t("em",[e._v("Design Patterns: Elements of Reusable Object-Oriented Software")]),e._v(" , by Erich Gamma, Richard Helm,")]),e._v(" "),t("p",[e._v("Ralph Johnson, and John Vlissides (Addison-Wesley Professional, 1994)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("The original book on a common language of “patterns” for software engineers to talk about\nobject-oriented programming. As a catalog of common, useful patterns, it helps\nprogrammers avoid the pitfalls that often happen when people try to solve a tricky problem\non their own for the first time.\n")])])]),t("p",[t("em",[e._v("Programming Pearls")]),e._v(" , 2nd edition, by Jon Bentley (Addison-Wesley Professional, 1999)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("A series of articles on real software problems. Great insights on solving real-world\nproblems in each chapter.\n")])])]),t("p",[t("em",[e._v("High Performance Web Sites")]),e._v(" , by Steve Souders (O’Reilly, 2007)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Although not a book about programming, this book is noteworthy because it describes a\nnumber of ways to optimize a website without writing much code (in keeping with\nChapter 13, Writing Less Code ).\n")])])]),t("p",[t("em",[e._v("Joel on Software: And on Diverse and ...")]),e._v(" , by Joel Spolsky")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Some of the best articles from http://www.joelonsoftware.com/. Spolsky writes about many\naspects of software engineering and has an insightful take on many related topics. Be sure\nto read “Things You Should Never Do, Part I,” and “The Joel Test: 12 Steps to Better Code.”\n")])])]),t("h3",{attrs:{id:"books-of-historical-note"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#books-of-historical-note"}},[e._v("#")]),e._v(" Books of Historical Note")]),e._v(" "),t("p",[t("em",[e._v("Writing Solid Code")]),e._v(" , by Steve Maguire (Microsoft Press, 1993)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("This book has unfortunately become a bit dated, but it definitely influenced us with great\nadvice about how to make your code more bug-free. If you read it, you’ll notice a lot of\noverlap with what we recommend.\n")])])]),t("p",[t("em",[e._v("Smalltalk Best Practice Patterns")]),e._v(" , by Kent Beck (Prentice Hall, 1996)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Although the examples are in Smalltalk, the book has many good programming principles.\n")])])]),t("p",[t("em",[e._v("The Elements of Programming Style")]),e._v(" , by Brian Kernighan and P.J. Plauger (Computing McGraw-")]),e._v(" "),t("p",[e._v("Hill, 1978)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("One of the oldest books dealing with the issue of “the clearest way to write things.” Most\nof the examples are in Fortran and PL1.\n")])])]),t("p",[t("em",[e._v("Literate Programming")]),e._v(" , by Donald E. Knuth (Center for the Study of Language and Information,")]),e._v(" "),t("ol",{attrs:{start:"1992"}},[t("li")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("We agree wholeheartedly with Knuth’s statement, “Instead of imagining that our main\ntask is to instruct a computer what to do, let us concentrate rather on explaining to human\nbeings what we want a computer to do” (p. 99). But be warned: the bulk of the book is\nabout Knuth’s WEB programming environment for documentation. WEB is effectively a\nlanguage for writing your programs as works of literature, with code on the sidelines.\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("FURTHER READING 183\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Having used a WEB-derived system ourselves, we think that when code is constantly\nchanging (which is usually), it’s harder to keep a so-called “literate program” fresh than\nit is to keep your code fresh using the practices we recommend.\n")])])]),t("p",[t("strong",[e._v("184")]),e._v(" APPENDIX")]),e._v(" "),t("h3",{attrs:{id:"index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" INDEX")]),e._v(" "),t("p",[t("strong",[e._v("Symbols")]),e._v("\n4xx HTTP response codes, 144\n5xx HTTP response codes, 144\n?: conditional expression, 73–74")]),e._v(" "),t("p",[t("strong",[e._v("A")]),e._v("\nabbreviations, names using, 19\nabstract names, vs. concrete, 13–15\nacronyms, names with, 19\naesthetics, 34–43\nbreaking code into paragraphs, 41–42\ncolumn alignment, 38–39\ndeclarations organized into blocks, 40–41\nimportance of, 35\nline breaks for consistency and compactness,\n35–37\nmethods to clean up irregularity, 37–38\norder of code, 39–40\npersonal style vs. consistency, 42\nvs. design, 34\nAjax, submitting data to server with, 112\nalert() (JavaScript), 112\nambiguous names, 24\nambiguous pronouns, comments with, 60\nanonymous functions, 80\narguments\nassignment by name, 63\norder in conditionals, 70\narrays, JavaScript function to remove value from,\n95\nassert() method, 154–155\nassertEqual() method (Python), 155\nassignment, inside if statement, 71\nattributes, encoding in names, 16–17\nauthorization of web page user, PHP for, 132")]),e._v(" "),t("p",[t("strong",[e._v("B")]),e._v("\nBeck, Kent, Smalltalk Best Practice Patterns, 119")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("begin and end, inclusive/exclusive ranges using,\n26–27\nbig picture comments, 55\nblock scope, 100\nblocks of code, declarations organized into, 40–41\nBooleans\nnames for, 27\nrewriting expressions, 85\nBoost C++ library, 154\nbottom-up programming, 114\nBrechner, Eric, 96\nbucketing events in small time window, 174–178\nbugs\ncomments and, 50\noff-by-one, 25\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("C\nC programming language, variable definitions\nlocation, 101–102\nC#, structured idiom for cleanup code, 76\nC++\nblock scope, 100\ncode for reading file, 112\nif statement scope in, 98\ninline comment for named function parameter,\n64\nmacros, 90\nsimplifying expressions, 90\nStandard Library, 28\nstructured idiom for cleanup code, 76\ncache, adding, 141\ncapitalization, names with, 20\nCipher class (Python), 117\nclass interface, for minute/hour counter, 166–169\nclass member variables, 97\nclass member, restricting access to, 98\nclasses\ninter-class complexity from multiple, 179\nnames of, 8\ncleanup code, structured idiom, 76\n")])])]),t("p",[e._v("We’d like to hear your suggestions for improving our indexes. Send email to "),t("em",[e._v("index@oreilly.com")]),e._v(".")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("185\n")])])]),t("p",[e._v("clever code, confusion from, 86\nClip() function, 24\nclosure in JavaScript, 99\ncode, viii, 150\n(see also test code)\neliminating duplicate, 38\nisolating regions of, 129\nless vs. more, 3\nmultiple tasks vs. single, 122–130\nqualities of good, 2\nredundant, 170\nremoving unused, 143\ntest-friendly development, 160\nturning thoughts into, 132–138\nunderstandable, 2\nwriting less, 140–145\ncodebases\ndirectory for general-purpose code, 114\nkeeping small, 142\ncolumn alignment, 38–39\ncommand-line flag, name for, 14\ncomments, 3, 46–57, 60–65\nambiguous pronouns in, 60\nbig picture, 54\ncode flaw descriptions, 50–51\ncompactness, 60\nconstants explained, 51\nfunction behavior description, 61\ninformation-dense words in, 64\ninput/output examples to illustrate corner\ncases, 61–62\ninsights about code in, 50\nintent statement for code, 62–63\nlining up, 36–37\nminute/hour counter improvements, 167–169\nnamed function parameter, 63–64\nnames and, 49\npreciseness, 60, 61\npurpose of, 46\nreader’s perspective for, 51\nsummary, 42, 55\nwhat, why, or how, 56\nwhen not to use, 47–49\nwriter’s block, 56\ncomplex idea, ability to explain, 132\ncomplexity, 142\ncomplicated logic, breaking down, 86–88\nconcrete names, vs. abstract, 13–15\nconditional expression (?: ), 73–74\nconditionals, order of arguments, 70\nconsistent layout, 34\nline breaks for, 35–37\npersonal style vs., 42\nconstants, 103\ncomments to explain, 51")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("constructors, formatting names, 21\ncontinue statement, 75\ncontrol flow, 70–81\n?: conditional expression, 73–74\nearly return from function, 75–76\neliminating variables, 96\nfollowing flow of execution, 80\ngoto statement, 76\nnesting, 77–79\nConveyorQueue interface, 176\nimplementing, 178\ncookies in JavaScript, 116\ncopy constructor, default, 13\ncorner cases, input/output comment examples to\nillustrate, 61–62\ncrutch comments, 49\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("D\ndashes, names with, 20\ndatabase tables, program to join, 134–137\nDe Morgan’s laws, 85\ndeclarations, organized into blocks, 40–41\ndefragmenting code, 122\ndeleting unused code, 143\ndesign, vs. aesthetics, 34\ndevelopment time, sweet spot for, 162\ndictionary in Python, 144\nsensitive information in, 117\nDISALLOW_COPY_AND_ASSIGN macro, 14\nDISALLOW_EVIL_CONSTRUCTOR macro, 13\ndo-while loops, avoiding, 74–75\nDRY (Don’t Repeat Yourself) principle, 89\nduplicated code, eliminating, 38\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("E\nEclipse, word-completion command, 19\nEmacs, word-completion command, 19\nend, inclusive/exclusive ranges using, 26–27\nerror messages\nhand-crafted, 155–156\nreadability, 154–156\nexceptions, 80\nexecution flow, following, 80\nexpectations of users, matching, 27–28\nexplaining variables, 84\nexpressions\nbreaking down, 84–91\ncomplicated logic in, 86–88\none-line vs. multiple lines, 3\nshort-circuit logic abuse, 86\nsimplifying, 90\nexternal components\ntesting issues, 161\nextracting, 110\n")])])]),t("p",[t("strong",[e._v("186")]),e._v(" INDEX")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("(see also subproblems code extraction)\nvalues from object, 124–128\n")])])]),t("p",[t("strong",[e._v("F")]),e._v("\nfalse, 27\nfeatures, decision not to implement, 140\nfile contents, reading, 112\nFilter() function, 24\nfindClosestLocation() example, 110–111\nfirst and last, inclusive ranges using, 26\nFIXME: marker, 50\nflow of execution, following, 80\nfor loops, 170, 171\nremoving nesting inside, 78–79\nformatting names, meaning from, 20–21\nformat_pretty() function, 113\nFowler, Martin, Refactoring: Improving the Design\nof Existing Code, 119\nfunction pointers, 80\nfunctionality, project-specific, 115\nfunctions\nanonymous, 80\ncomments for behavior description, 61\nearly return from, 75–76, 78\nextracting code into separate, 110–118\nnames of, 8\nwrapper, 116\nfundamental theory of readability, 3")]),e._v(" "),t("p",[t("strong",[e._v("G")])]),e._v(" "),t("p",[e._v("general-purpose code, 112–114\ncreating, 114\ngeneric names, 10–12\nget*() methods, user expectations for, 27\nglobal scope, JavaScript, 100\nglobal variables\navoiding, 97\ntestability, 161\nGoogle\nDISALLOW_EVIL_CONSTRUCTOR macro, 14\nformatting conventions for open-source\nprojects, 20–21\nGosling, James, 104\ngoto statement, 76")]),e._v(" "),t("p",[t("strong",[e._v("H")]),e._v("\nHACK: marker, 50\nhelper methods, 37, 130\nnames in test code, 159\nShiftOldEvents() in minute/hour counter, 173\ntest code clean-up with, 151\nhigh-level comments, 55\nHTML tags, id or class attribute names, 21\nHttpDownload object, 128")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Hungarian notation, 17\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("I\nif statement\nassignment inside, 71\nhandling separate, 127–128\nname of index for, 12\norder of arguments, 70\nscope in C++, 98\nif/else blocks, order of, 72–73\nimmutable data types, 104\nimplementing features, decision not to, 140\ninclusive ranges, first and last for, 26\ninclusive/exclusive ranges, begin and end for, 26–\n27\nindices, names for, 12\ninformation-dense words, comments with, 64\ninline comments, named function parameters in,\n64\ninput values, choosing good for test, 156–158\ninput/output comment examples, to illustrate\ncorner cases, 61–62\nIntelliJ IDEA, word-completion command, 19\ninterface\nreshaping, 117\nsimplifying existing, 116\nintermediate result variable, eliminating, 95, 101,\n105\nisolating regions of code, 129\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("J\nJava\nblock scope, 100–101\ninline comment for named function parameter,\n64\nstructured idiom for cleanup code, 76\nJavaScript\nalert(), 112\ncookies, 116\nfindClosestLocation() example, 110–111\nformatting names, 21\nfunction to remove value from array, 95\nglobal scope, 100\nno nested scope, 100–101\nor operator, 86\nprivate variables in, 99\njQuery JavaScript library, 133\njQuery library function, formatting names, 21\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("L\nlast, inclusive ranges using, 26\nlibraries, 116\nknowledge of, 133–134, 143–144\nregular expressions, 153\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("INDEX 187\n")])])]),t("p",[e._v("limits, names for, 25\nline breaks in code, 35–37\nlines of code, minimizing, vs. time requirements,\n73\nlist::size() method, user expectations for, 28\nlists in Python, 144\nlogic\nbreaking down complicated, 86–88\nclear description, 132\nloop iterators, 12\nloops, removing nesting inside, 78–79")]),e._v(" "),t("p",[t("strong",[e._v("M")])]),e._v(" "),t("p",[e._v("macros (C++), 90\nmatching database rows, Python code to find, 135–\n137\nmax, for inclusive limits, 25\nmemory leaks, 14\nmemory requirements, 174\nmental baggage, 67\nmessy code, comment for, 50\nmin, for inclusive limits, 25\nminilanguages, implementing custom, 152–153\nminute/hour counter, 166–180\nclass interface, 166–169\ncomments, 167–169\ncomparing solutions, 179\nconveyor belt design, 171–174\nnaive solution, 169–171\nperformance problems, 171\ntime-bucketed design, 174–178\nTrailingBucketCounter implementation, 176–\n177")]),e._v(" "),t("p",[t("strong",[e._v("N")])]),e._v(" "),t("p",[e._v("named function parameter comments, 63–64\nnames\nacronyms or abbreviations in, 19\navoiding misunderstanding, 24–31\nBooleans, 27\ncomments and, 49\nconcrete vs. abstract, 13–15\nencoding attributes, 16–17\nevaluating multiple candidates, 29–31\nformatting for meaning, 20–21\ngeneric, 10–12\ninformation in, 8, 16–17\nlength of, 18–20\nlimits, 25\nloop iterator options, 12\nmeasurement units in, 16\nMinuteHourCounter class improvements, 167\nPython argument assignment by, 63\nspecificity of words and, 8–10")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("for test functions, 158–159\nnegative case in if/else, vs. positive, 72–73\nnesting, 77–79\naccumulating, 77\nremoving by early return, 78\nremoving inside loops, 78–79\nnondeterministic behavior, 161\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("O\noff-by-one bug, 25\nOpenBSD operating system, Wizard mode, 29\nor operator, 86\norder of code, 39–40\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("P\nparagraphs, breaking code into, 41–42\nperformance, vs. precision, 174\npersonal style vs. consistency, 42\nperspective of others, 169\nPHP\nreading file contents, 112\nuser authorization for web page, 132\npitfalls, anticipating with comments, 53–54\nplain English\ncode explanation in, 132\ntest description in, 152\nplaintext, indicator in names, 17\npositive case in if/else, vs. negative, 72–73\nprecision, vs. performance, 174\nprintf(), 153\nprivate variables, in JavaScript, 99\nproblems\nanticipating with comments, 53–54\nin test code, 150\nproduct development, testing as limitation, 162\nproject-specific functionality, 115\nprototype inheritance pattern, evaluating names\nfor, 29–31\npurpose of entity, name choices and, 10–12, 10\nPython\nargument assignment by name, 63\nassert statement, 155\ncode to find matching database rows, 135–137\ndictionary with sensitive user information, 117\nlists and sets, 144\nno nested scope, 100\nor operator, 86\nreading file contents, 112\nstructured idiom for cleanup code, 76\nunittest module and test method names, 159\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Q\nquestions, anticipating with comments, 52\n")])])]),t("p",[t("strong",[e._v("188")]),e._v(" INDEX")]),e._v(" "),t("p",[t("strong",[e._v("R")]),e._v("\nranges\ninclusive, first and last for, 26\ninclusive/exclusive, begin and end for, 26–27\nreadability\nerror messages and, 154–156\nfundamental theory of, 3\ntest code and, 150–153\nvariables and, 94–106\nreading file contents, 112\nredundancy check, comment as, 63\nredundant code, 170\nRefactoring: Improving the Design of Existing Code\n(Fowler), 119\nregular expressions\nlibraries, 153\nprecompiling, 115\nremoving unused code, 143\nrequirements, questions and breakdown, 140–141\nreturn value, name for, 10\nreturning early from function, 75–76\nremoving nesting by, 78\nreverse iterator, 171\nRuby, or operator, 86\n--run locally command-line flag, 14–15")]),e._v(" "),t("p",[t("strong",[e._v("S")])]),e._v(" "),t("p",[e._v("scope\nglobal, in JavaScript, 100\nif statement in C++, 98\nname length and, 18\nof variables, shrinking, 97–102\nsecurity bug, names and, 17\nsets in Python, 144\nShiftOldEvents() method, 173\nshort-circuit logic abuse, 86\nsignal/interrupt handlers, 80\nsilhouette of code, 36\nSmalltalk Best Practice Patterns (Beck), 119\nspecificity of words, name selection and, 8–10\nstatements, breaking down, 89\nstatic methods, 98\nstatistics, incrementing, 128–130\nstock purchases, recording, 134–137\nstore locator for business, 140–141\nStroustrup, Bjarne, 75\nsubproblems code extraction, 110–118\nfindClosestLocation() example, 110–111\ngeneral-purpose code, 112–114\nproject-specific functionality, 115\nsimplifying existing interface, 116\ntaking things too far, 117\nutility code, 111–112\nsummary comments, 42, 55")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("summary variables, 84–85, 89\n“surface-level” improvements, 5\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("T\ntasks\nextracting values from object, 124–128\nmultiple vs. single, 122–130\nsize of, 123–124\nUpdateCounts() function example, 128–130\ntemporary variables, 94\nternary operator, 73–74\ntest code\ncreating minimal statement, 152\nhelper method names in, 159\nlocating problems in, 150\nreadability, 150–153\nTest-Driven Development (TDD), 160\ntesting, 150–163\nCheckScoresBeforeAfter() function for, 153\nchoosing good input values, 156–158\ncode development and, 160\ngoing too far, 162\nand good design, 161\nidentifying problems in, 159–160\nlarge inputs for, 157\nmultiple tests of functionality, 158\nnames for test functions, 158–159\nwebsite changes, 29\ntext editors, word-completion command, 19\nTextMate, word-completion command, 19\nthreading, 80\ntime, requirement for understanding code, 3\ntime-sensitive systems, 176\ntmp variable, alternative, 11\nTODO: marker, 50\ntop-down programming, 114\nTrailingBucketCounter class, 176–177\ntrue, 27\ntypo, column alignment to find, 39\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("U\nunderscores, names with, 20\nUnix tools, 144\nUpdateCounts() function, 128–130\nuser authorization for web page, PHP for, 132\nuser information, Python dictionary with sensitive,\n117\nusers, matching expectations, 27–28\nutility code, extracting, 111–112\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("V\nvalues, extracting from object, 124–128\nvar keyword (JavaScript), 100\nvariables\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("INDEX 189\n")])])]),t("p",[e._v("class member, 97\neliminating, 94–96\neliminating intermediate results, 95, 101, 105\nexplaining, 84\nglobal, testability, 161\nimpact on readability, 94–106\nmeasurement units in name, 16\nmoving definitions down, 101–102\nnames of, 8\norder of definitions, 39–40\nprivate, in JavaScript, 99\nshrinking scope, 97–102\nsummary, 84–85\nswapping, name choices when, 11\ntemporary, 94\nwrite-once, 103–104, 106\nVi, word-completion command, 19\nvirtual methods, 80")]),e._v(" "),t("p",[t("strong",[e._v("W")])]),e._v(" "),t("p",[e._v("web pages, PHP for user authorization, 132\nweb server, tracking bytes transferred (see minute/\nhour counter)\nwebsites, experiments to test change, 29\nwhile loops\norder of arguments, 70\nvs. do-while loops, 75\nword-completion command, long names and, 19\nwrapper functions, 116\nwrite-once variables, 103–104, 106\nwriter’s block, comments and, 56")]),e._v(" "),t("p",[t("strong",[e._v("X")])]),e._v(" "),t("p",[e._v("XXX: marker, 50")]),e._v(" "),t("p",[t("strong",[e._v("190")]),e._v(" INDEX")]),e._v(" "),t("h3",{attrs:{id:"a-b-o-u-t-t-h-e-a-u-t-h-o-r-s"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-b-o-u-t-t-h-e-a-u-t-h-o-r-s"}},[e._v("#")]),e._v(" A B O U T T H E A U T H O R S")]),e._v(" "),t("p",[e._v("Although raised in the circus, "),t("strong",[e._v("Dustin Boswell")]),e._v(" realized early on that he was better at")]),e._v(" "),t("p",[e._v("computers than at acrobatics. Dustin received his B.S. from Caltech, where he got hooked on")]),e._v(" "),t("p",[e._v("computer science, and then went to UC San Diego for his master’s degree. He worked at Google")]),e._v(" "),t("p",[e._v("for five years, on a variety of projects including web crawling infrastructure. He's built")]),e._v(" "),t("p",[e._v('numerous websites and enjoys working on "big data" and machine learning. Dustin is now an')]),e._v(" "),t("p",[e._v("Internet startup junkie who spends his free time hiking the Santa Monica mountains and being")]),e._v(" "),t("p",[e._v("a new dad.")]),e._v(" "),t("p",[t("strong",[e._v("Trevor Foucher")]),e._v(" has worked on large-scale software development at Microsoft and Google for")]),e._v(" "),t("p",[e._v("over 10 years. He is currently an engineer on search infrastructure at Google. In his spare time,")]),e._v(" "),t("p",[e._v("he attends gaming conventions, reads science fiction, and serves as COO of his wife's fashion")]),e._v(" "),t("p",[e._v("start-up company. Trevor graduated with a BS degree in Electrical Engineering and Computer")]),e._v(" "),t("p",[e._v("Science from UC Berkeley.")])])}),[],!1,null,null,null);n.default=o.exports}}]);