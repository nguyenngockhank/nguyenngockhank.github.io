(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{550:function(e,t,a){e.exports=a.p+"assets/img/image--002.e715b54f.jpg"},911:function(e,t,a){"use strict";a.r(t);var o=a(7),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h2",{attrs:{id:"preface"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#preface"}},[e._v("#")]),e._v(" Preface")]),e._v(" "),o("p",[e._v("We’ve spent some twenty years in the world of enterprise computing. We’ve seen many things change in languages, architectures, platforms, and processes. But through all this time one thing has stayed constant—relational databases store the data. There have been challengers, some of which have had success in some niches, but on the whole the data storage question for architects has been the question of which relational database to use.")]),e._v(" "),o("p",[e._v("There is a lot of value in the stability of this reign. An organization’s data lasts much longer that its programs (at least that’s what people tell us—we’ve seen plenty of very old programs out the re). It’s valuable to have a stable data storage that’s well understood and accessible from many application programming platforms.")]),e._v(" "),o("p",[e._v("Now, however, there’s a new challenger on the block under the confrontational tag of NoSQL. It’s born out of a need to handle larger data volumes which forced a fundamental shift to building large hardware platforms through clusters of commodity servers. This need has also raised long-running concerns about the difficulties of making application code play well with the relational data model.")]),e._v(" "),o("p",[e._v("The term “NoSQL” is very ill-defined. It’s generally applied to a number of recent nonrelational databases such as Cassandra, Mongo, Neo4J, and Riak. They embrace schemaless data, run on clusters, and have the ability to trade off traditional consistency for other useful properties.")]),e._v(" "),o("p",[e._v("Advocates of NoSQL databases claim that they can build systems that are more performant, scale much better, and are easier to program with.")]),e._v(" "),o("p",[e._v("Is this the first rattle of the death knell for relational databases, or yet another pretender to the throne? Our answer to that is “neither.” Relational databases are a powerful tool that we expect to be using for many more decades, but we do see a profound change in that relational databases won’t be the only databases in use. Our view is that we are entering a world of Polyglot Persistence where\nenterprises, and even individual applications, use multiple technologies for data management. As a\nresult, architects will need to be familiar with these technologies and be able to evaluate which ones\nto use for differing needs. Had we not thought that, we wouldn’t have spent the time and effort writing\nthis book.")]),e._v(" "),o("p",[e._v("This book seeks to give you enough information to answer the question of whether NoSQL\ndatabases are worth serious consideration for your future projects. Every project is different, and\nthere’s no way we can write a simple decision tree to choose the right data store. Instead, what we\nare attempting here is to provide you with enough background on how NoSQL databases work, so that\nyou can make those judgments yourself without having to trawl the whole web. We’ve deliberately\nmade this a small book, so you can get this overview pretty quickly. It won’t answer your questions\ndefinitively, but it should narrow down the range of options you have to consider and help you\nunderstand what questions you need to ask.")]),e._v(" "),o("h3",{attrs:{id:"why-are-nosql-databases-interesting"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#why-are-nosql-databases-interesting"}},[e._v("#")]),e._v(" Why Are NoSQL Databases Interesting?")]),e._v(" "),o("p",[e._v("We see two primary reasons why people consider using a NoSQL database.")]),e._v(" "),o("ul",[o("li",[o("p",[o("strong",[e._v("Application development productivity.")]),e._v(" A lot of application development effort is spent on\nmapping data between in-memory data structures and a relational database. A NoSQL database\nmay provide a data model that better fits the application’s needs, thus simplifying that\ninteraction and resulting in less code to write, debug, and evolve.")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("Large-scale data.")]),e._v(" Organizations are finding it valuable to capture more data and process it\nmore quickly. They are finding it expensive, if even possible, to do so with relational\ndatabases. The primary reason is that a relational database is designed to run on a single\nmachine, but it is usually more economic to run large data and computing loads on clusters of\nmany smaller and cheaper machines. Many NoSQL databases are designed explicitly to run on\nclusters, so they make a better fit for big data scenarios.")])])]),e._v(" "),o("h3",{attrs:{id:"what-s-in-the-book"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#what-s-in-the-book"}},[e._v("#")]),e._v(" What’s in the Book")]),e._v(" "),o("p",[e._v("We’ve broken this book up into two parts. The first part concentrates on core concepts that we think\nyou need to know in order to judge whether NoSQL databases are relevant for you and how they\ndiffer. In the second part we concentrate more on implementing systems with NoSQL databases.")]),e._v(" "),o("p",[e._v("Chapter 1 begins by explaining why NoSQL has had such a rapid rise—the need to process larger\ndata volumes led to a shift, in large systems, from scaling vertically to scaling horizontally on\nclusters. This explains an important feature of the data model of many NoSQL databases—the explicit\nstorage of a rich structure of closely related data that is accessed as a unit. In this book we call this\nkind of structure an "),o("em",[e._v("aggregate")]),e._v(".")]),e._v(" "),o("p",[e._v("Chapter 2 describes how aggregates manifest themselves in three of the main data models in\nNoSQL land: key-value (“Key-Value and Document Data Models,” p. 20 ), document (“Key-Value\nand Document Data Models,” p. 20 ), and column family (“Column-Family Stores,” p. 21 ) databases.\nAggregates provide a natural unit of interaction for many kinds of applications, which both improves\nrunning on a cluster and makes it easier to program the data access. Chapter 3 shifts to the downside\nof aggregates—the difficulty of handling relationships (“Relationships,” p. 25 ) between entities in\ndifferent aggregates. This leads us naturally to graph databases (“Graph Databases,” p. 26 ), a NoSQL\ndata model that doesn’t fit into the aggregate-oriented camp. We also look at the common\ncharacteristic of NoSQL databases that operate without a schema (“Schemaless Databases,” p. 28 )—\na feature that provides some greater flexibility, but not as much as you might first think.")]),e._v(" "),o("p",[e._v("Having covered the data-modeling aspect of NoSQL, we move on to distribution: Chapter 4\ndescribes how databases distribute data to run on clusters. This breaks down into sharding\n(“Sharding,” p. 38 ) and replication, the latter being either master-slave (“Master-Slave Replication,”\np. 40 ) or peer-to-peer (“Peer-to-Peer Replication,” p. 42 ) replication. With the distribution models\ndefined, we can then move on to the issue of consistency. NoSQL databases provide a more varied\nrange of consistency options than relational databases—which is a consequence of being friendly to\nclusters. So Chapter 5 talks about how consistency changes for updates (“Update Consistency,” p. 47 )\nand reads (“Read Consistency,” p. 49 ), the role of quorums (“Quorums,” p. 57 ), and how even some\ndurability (“Relaxing Durability,” p. 56 ) can be traded off. If you’ve heard anything about NoSQL,\nyou’ll almost certainly have heard of the CAP theorem; the “The CAP Theorem” section on p. 53\nexplains what it is and how it fits in.")]),e._v(" "),o("p",[e._v("While these chapters concentrate primarily on the principles of how data gets distributed and kept\nconsistent, the next two chapters talk about a couple of important tools that make this work. Chapter 6\ndescribes version stamps, which are for keeping track of changes and detecting inconsistencies.\nChapter 7 outlines map-reduce, which is a particular way of organizing parallel computation that fits\nin well with clusters and thus with NoSQL systems.")]),e._v(" "),o("p",[e._v("Once we’re done with concepts, we move to implementation issues by looking at some example\ndatabases under the four key categories: Chapter 8 uses Riak as an example of key-value databases,")]),e._v(" "),o("p",[e._v("Chapter 9 takes MongoDB as an example for document databases, Chapter 10 chooses Cassandra to\nexplore column-family databases, and finally Chapter 11 plucks Neo4J as an example of graph\ndatabases. We must stress that this is not a comprehensive study—there are too many out there to\nwrite about, let alone for us to try. Nor does our choice of examples imply any recommendations. Our\naim here is to give you a feel for the variety of stores that exist and for how different database\ntechnologies use the concepts we outlined earlier. You’ll see what kind of code you need to write to\nprogram against these systems and get a glimpse of the mindset you’ll need to use them.")]),e._v(" "),o("p",[e._v("A common statement about NoSQL databases is that since they have no schema, there is no\ndifficulty in changing the structure of data during the life of an application. We disagree—a\nschemaless database still has an implicit schema that needs change discipline when you implement it,\nso Chapter 12 explains how to do data migration both for strong schemas and for schemaless systems.")]),e._v(" "),o("p",[e._v("All of this should make it clear that NoSQL is not a single thing, nor is it something that will\nreplace relational databases. Chapter 13 looks at this future world of Polyglot Persistence, where\nmultiple data-storage worlds coexist, even within the same application. Chapter 14 then expands our\nhorizons beyond this book, considering other technologies that we haven’t covered that may also be a\npart of this polyglot-persistent world.")]),e._v(" "),o("p",[e._v("With all of this information, you are finally at a point where you can make a choice of what data\nstorage technologies to use, so our final chapter (Chapter 15, “Choosing Your Database,” p. 147 )\noffers some advice on how to think about these choices. In our view, there are two key factors—\nfinding a productive programming model where the data storage model is well aligned to your\napplication, and ensuring that you can get the data access performance and resilience you need. Since\nthis is early days in the NoSQL life story, we’re afraid that we don’t have a well-defined procedure\nto follow, and you’ll need to test your options in the context of your needs.")]),e._v(" "),o("p",[e._v("This is a brief overview—we’ve been very deliberate in limiting the size of this book. We’ve\nselected the information we think is the most important—so that you don’t have to. If you are going to\nseriously investigate these technologies, you’ll need to go further than what we cover here, but we\nhope this book provides a good context to start you on your way.")]),e._v(" "),o("p",[e._v("We also need to stress that this is a very volatile field of the computer industry. Important aspects\nof these stores are changing every year—new features, new databases. We’ve made a strong effort to\nfocus on concepts, which we think will be valuable to understand even as the underlying technology\nchanges. We’re pretty confident that most of what we say will have this longevity, but absolutely sure\nthat not all of it will.")]),e._v(" "),o("h3",{attrs:{id:"who-should-read-this-book"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#who-should-read-this-book"}},[e._v("#")]),e._v(" Who Should Read This Book")]),e._v(" "),o("p",[e._v("Our target audience for this book is people who are considering using some form of a NoSQL\ndatabase. This may be for a new project, or because they are hitting barriers that are suggesting a shift\non an existing project.")]),e._v(" "),o("p",[e._v("Our aim is to give you enough information to know whether NoSQL technology makes sense for\nyour needs, and if so which tool to explore in more depth. Our primary imagined audience is an\narchitect or technical lead, but we think this book is also valuable for people involved in software\nmanagement who want to get an overview of this new technology. We also think that if you’re a\ndeveloper who wants an overview of this technology, this book will be a good starting point.")]),e._v(" "),o("p",[e._v("We don’t go into the details of programming and deploying specific databases here—we leave that for specialist books. We’ve also been very firm on a page limit, to keep this book a brief\nintroduction. This is the kind of book we think you should be able to read on a plane flight: It won’t\nanswer all your questions but should give you a good set of questions to ask.")]),e._v(" "),o("p",[e._v("If you’ve already delved into the world of NoSQL, this book probably won’t commit any new\nitems to your store of knowledge. However, it may still be useful by helping you explain what you’ve\nlearned to others. Making sense of the issues around NoSQL is important—particularly if you’re\ntrying to persuade someone to consider using NoSQL in a project.")]),e._v(" "),o("h3",{attrs:{id:"what-are-the-databases"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#what-are-the-databases"}},[e._v("#")]),e._v(" What Are the Databases")]),e._v(" "),o("p",[e._v("In this book, we’ve followed a common approach of categorizing NoSQL databases according to\ntheir data model. Here is a table of the four data models and some of the databases that fit each\nmodel. This is not a comprehensive list—it only mentions the more common databases we’ve come\nacross. At the time of writing, you can find more comprehensive lists at "),o("a",{attrs:{href:"http://nosql-database.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://nosql-database.org"),o("OutboundLink")],1),e._v(" and\n"),o("a",{attrs:{href:"http://nosql.mypopescu.com/kb/nosql.",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://nosql.mypopescu.com/kb/nosql."),o("OutboundLink")],1),e._v(" For each category, we mark with italics the database we use as\nan example in the relevant chapter.")]),e._v(" "),o("p",[e._v("Our goal is to pick a representative tool from each of the categories of the databases. While we talk about specific examples, most of the discussion should apply to the entire category, even though these products are unique and cannot be generalized as such. We will pick one database for each of the key-value, document, column family, and graph databases; where appropriate, we will mention other products that may fulfill a specific feature need.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(550),alt:"Img"}})]),e._v(" "),o("p",[e._v("This classification by data model is useful, but crude. The lines between the different data models, such as the distinction between key-value and document databases (“Key-Value and Document Data Models,” p. 20 ), are often blurry. Many databases don’t fit cleanly into categories; for example, OrientDB calls itself both a document database and a graph database.")]),e._v(" "),o("h3",{attrs:{id:"acknowledgments"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#acknowledgments"}},[e._v("#")]),e._v(" Acknowledgments")]),e._v(" "),o("p",[e._v("Our first thanks go to our colleagues at ThoughtWorks, many of whom have been applying NoSQL to\nour delivery projects over the last couple of years. Their experiences have been a primary source\nboth of our motivation in writing this book and of practical information on the value of this\ntechnology. The positive experience we’ve had so far with NoSQL data stores is the basis of our\nview that this is an important technology and a significant shift in data storage.")]),e._v(" "),o("p",[e._v("We’d also like to thank various groups who have given public talks, published articles, and blogs\non their use of NoSQL. Much progress in software development gets hidden when people don’t share\nwith their peers what they’ve learned. Particular thanks here go to Google and Amazon whose papers\non Bigtable and Dynamo were very influential in getting the NoSQL movement going. We also thank\ncompanies that have sponsored and contributed to the open-source development of NoSQL databases.\nAn interesting difference with previous shifts in data storage is the degree to which the NoSQL\nmovement is rooted in open-source work.")]),e._v(" "),o("p",[e._v("Particular thanks go to ThoughtWorks for giving us the time to work on this book. We joined\nThoughtWorks at around the same time and have been here for over a decade. ThoughtWorks\ncontinues to be a very hospitable home for us, a source of knowledge and practice, and a welcome\nenvironment of openly sharing what we learn—so different from the traditional systems delivery\norganizations.")]),e._v(" "),o("p",[e._v("Bethany Anders-Beck, Ilias Bartolini, Tim Berglund, Duncan Craig, Paul Duvall, Oren Eini, Perryn\nFowler, Michael Hunger, Eric Kascic, Joshua Kerievsky, Anand Krishnaswamy, Bobby Norton, Ade\nOshineye, Thiyagu Palanisamy, Prasanna Pendse, Dan Pritchett, David Rice, Mike Roberts, Marko\nRodriquez, Andrew Slocum, Toby Tripp, Steve Vinoski, Dean Wampler, Jim Webber, and Wee\nWitthawaskul reviewed early drafts of this book and helped us improve it with their advice.")]),e._v(" "),o("p",[e._v("Additionally, Pramod would like to thank Schaumburg Library for providing great service and\nquiet space for writing; Arhana and Arula, my beautiful daughters, for their understanding that daddy\nwould go to the library and not take them along; Rupali, my beloved wife, for her immense support\nand help in keeping me focused.")])])}),[],!1,null,null,null);t.default=n.exports}}]);