(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{1372:function(t,e,s){"use strict";s.r(e);var a=s(7),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"design-patterns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#design-patterns"}},[t._v("#")]),t._v(" Design patterns")]),t._v(" "),a("TagLinks"),t._v(" "),a("h2",{attrs:{id:"cheatsheet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cheatsheet"}},[t._v("#")]),t._v(" Cheatsheet")]),t._v(" "),a("p",[a("img",{attrs:{src:s(934),alt:"cheatsheet"}}),t._v(" "),a("img",{attrs:{src:s(935),alt:"cheatsheet"}})]),t._v(" "),a("h2",{attrs:{id:"creational-design-patterns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creational-design-patterns"}},[t._v("#")]),t._v(" Creational Design patterns")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Factory method (aka Virtual Constructor)")]),t._v(" "),a("p",[t._v("Provides an interface for creating objects in a super class, but allows subclasses to alter the type of objects that will be created.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Abstract Factory")]),t._v(" "),a("p",[t._v("Lets you produce families of related objects without specifying their concrete classes.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Builder")]),t._v(" "),a("p",[t._v("Lets you construct complex objects step by step. The pattern allows you to produce different types and representations of an object using the same construction code.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Prototype (aka Clone)")]),t._v(" "),a("p",[t._v("Lets you copy existing objects without making your code dependent on their classes.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Singleton")]),t._v(" "),a("p",[t._v("Lets you ensure that a class has only one instance, while providing a global access point to this instance.")])]),t._v(" "),a("h2",{attrs:{id:"structural-design-patterns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structural-design-patterns"}},[t._v("#")]),t._v(" Structural Design patterns")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Adapter (aka Wrapper)")]),t._v(" "),a("p",[t._v("Provides a unified interface that allows objects with incompatible interfaces to collaborate.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Bridge")]),t._v(" "),a("p",[t._v("Lets you split a large class or a set of closely related classes into 2 separate hierarchies  - abstraction and implementation - which can bne developed independently of each other.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Composite (aka Object Tree)")]),t._v(" "),a("p",[t._v("Lets you compose objects into 3 structures and then work with these structures as if there were individual objects.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Decorator (aka Wrapper)")]),t._v(" "),a("p",[t._v("Lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Facade")]),t._v(" "),a("p",[t._v("Provides a simplified interface to a library, a framework, or any other complex set of classes.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Flyweight (aka Cache)")]),t._v(" "),a("p",[t._v("Lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects, instead of keeping all of the data in each object.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Proxy")]),t._v(" "),a("p",[t._v("Lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something  either before  or after the request gets through to the original object.")])]),t._v(" "),a("h2",{attrs:{id:"behavioral-design-patterns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#behavioral-design-patterns"}},[t._v("#")]),t._v(" Behavioral Design patterns")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Chain of Responsibility (aka CoR, Chain of Command)")]),t._v(" "),a("p",[t._v("Lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Command (aka Action, Transaction)")]),t._v(" "),a("p",[t._v("Turns a request into a stand-alone object that contains all information about the request. This transformation lets you parameterize methods with different requests, delay or queue a request's execution, and support undoable operations.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Iterator")]),t._v(" "),a("p",[t._v("Lets you traverse elements of a collection without exposing its underlying representation (list, stack, tree, etc.)")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Mediator (aka Intermediary, Controller)")]),t._v(" "),a("p",[t._v("Lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Memento (aka Snapshot)")]),t._v(" "),a("p",[t._v("Lets you sae and restore the previous state of  an object without revealing the details of its implementation.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Observer (aka Event-subscriber, Listener)")]),t._v(" "),a("p",[t._v("Lets you defined a subscription mechanism to notify multiple objects about any events that happen to the object they're observing.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("State")]),t._v(" "),a("p",[t._v("Lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Strategy")]),t._v(" "),a("p",[t._v("lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Template Method")]),t._v(" "),a("p",[t._v("Defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Visitor")]),t._v(" "),a("p",[t._v("Lets you separate algorithms from the objects on which they operate.")])])],1)}),[],!1,null,null,null);e.default=o.exports},934:function(t,e,s){t.exports=s.p+"assets/img/dp-cheatsheet1.b996a7ec.png"},935:function(t,e,s){t.exports=s.p+"assets/img/dp-cheatsheet2.61ca0769.png"}}]);