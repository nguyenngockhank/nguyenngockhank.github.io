(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{1102:function(e,t,s){"use strict";s.r(t);var a=s(7),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"load-balancers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load-balancers"}},[e._v("#")]),e._v(" Load balancers")]),e._v(" "),s("h2",{attrs:{id:"static-algorithms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static-algorithms"}},[e._v("#")]),e._v(" Static Algorithms")]),e._v(" "),s("h3",{attrs:{id:"round-robin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#round-robin"}},[e._v("#")]),e._v(" Round robin")]),e._v(" "),s("p",[e._v("The client requests are sent to different service instances in sequential order. The services are usually required to be stateless.")]),e._v(" "),s("h3",{attrs:{id:"sticky-round-robin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sticky-round-robin"}},[e._v("#")]),e._v(" Sticky round-robin")]),e._v(" "),s("p",[e._v("This is an improvement of the round-robin algorithm. If Aliceâ€™s first request goes to service A, the following requests go to service A as well.")]),e._v(" "),s("h3",{attrs:{id:"weighted-round-robin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#weighted-round-robin"}},[e._v("#")]),e._v(" Weighted round-robin")]),e._v(" "),s("p",[e._v("The admin can specify the weight for each service. The ones with a higher weight handle more requests than others.")]),e._v(" "),s("h3",{attrs:{id:"hash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[e._v("#")]),e._v(" Hash")]),e._v(" "),s("p",[e._v("This algorithm applies a hash function on the incoming requests' IP or URL. The requests are routed to relevant instances based on the hash function result.")]),e._v(" "),s("h2",{attrs:{id:"dynamic-algorithms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-algorithms"}},[e._v("#")]),e._v(" Dynamic Algorithms")]),e._v(" "),s("h3",{attrs:{id:"least-connections"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#least-connections"}},[e._v("#")]),e._v(" Least connections")]),e._v(" "),s("p",[e._v("A new request is sent to the service instance with the least concurrent connections.")]),e._v(" "),s("h3",{attrs:{id:"least-response-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#least-response-time"}},[e._v("#")]),e._v(" Least response time")]),e._v(" "),s("p",[e._v("A new request is sent to the service instance with the fastest response time.")])])}),[],!1,null,null,null);t.default=r.exports}}]);