(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{804:function(e,t,s){"use strict";s.r(t);var a=s(7),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"request-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-methods"}},[e._v("#")]),e._v(" Request Methods")]),e._v(" "),s("p",[e._v("Every API "),s("strong",[e._v("MUST")]),e._v(" use appropriate "),s("a",{attrs:{href:"https://github.com/for-GET/know-your-http-well/blob/master/methods.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP request methods"),s("OutboundLink")],1),e._v(" for every operation.")]),e._v(" "),s("p",[e._v("Every API designer, implementer and consumer "),s("strong",[e._v("MUST")]),e._v(" understand the semantic of the HTTP METHOD she is using.")]),e._v(" "),s("p",[e._v("At a minimum everyone "),s("strong",[e._v("MUST")]),e._v(" be familiar with the semantics of "),s("a",{attrs:{href:"https://github.com/for-GET/know-your-http-well/blob/master/methods.md#common",target:"_blank",rel:"noopener noreferrer"}},[e._v('"Common" HTTP Request Methods'),s("OutboundLink")],1),e._v(": "),s("strong",[e._v("DELETE")]),e._v(", "),s("strong",[e._v("GET")]),e._v(", "),s("strong",[e._v("HEAD")]),e._v(", "),s("strong",[e._v("PUT")]),e._v(", "),s("strong",[e._v("POST")]),e._v(" and the "),s("a",{attrs:{href:"https://tools.ietf.org/html/rfc5789#section-2",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[e._v("PATCH")]),e._v(" HTTP Request Method"),s("OutboundLink")],1),e._v(". In addition, everyone "),s("strong",[e._v("MUST")]),e._v(" be aware which methods are "),s("strong",[e._v("Safe")]),e._v(", "),s("strong",[e._v("Idempotent")]),e._v(" and "),s("strong",[e._v("Cacheable")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"safe-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#safe-methods"}},[e._v("#")]),e._v(" Safe Methods")]),e._v(" "),s("p",[e._v("As per HTTP specification, the "),s("strong",[e._v("GET")]),e._v(" and "),s("strong",[e._v("HEAD")]),e._v(" methods should be used only for retrieval of resource representations – and they do not update/delete the resource on the server. Both methods are said to be considered “safe“. This allows user agents to represent other methods, such as POST, PUT and DELETE, in a special way, so that the user is made aware of the fact that a possibly unsafe action is being requested – and they can update/delete the resource on the server and so should be used carefully.")]),e._v(" "),s("h2",{attrs:{id:"idempotent-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idempotent-methods"}},[e._v("#")]),e._v(" Idempotent Methods")]),e._v(" "),s("p",[e._v("The term idempotent is used more comprehensively to describe an operation that will produce the same results if executed once or multiple times. This is a beneficial property in many situations, as it means that a transaction can be repeated or retried as often as necessary without causing unintended effects. With non-idempotent operations, the algorithm may have to keep track of whether the operation was already performed or not. In HTTP specification, The methods "),s("strong",[e._v("GET")]),e._v(", "),s("strong",[e._v("HEAD")]),e._v(", "),s("strong",[e._v("PUT")]),e._v(" and "),s("strong",[e._v("DELETE")]),e._v(" are declared idempotent methods. Other methods OPTIONS and TRACE "),s("strong",[e._v("SHOULD NOT")]),e._v(" have side effects, so both are also inherently idempotent.")]),e._v(" "),s("h2",{attrs:{id:"cacheable-methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cacheable-methods"}},[e._v("#")]),e._v(" Cacheable Methods")]),e._v(" "),s("p",[e._v('Request methods are considered "cacheable" if it is possible and useful to answer a current client request with a stored response from a prior request. '),s("strong",[e._v("GET")]),e._v(" and "),s("strong",[e._v("HEAD")]),e._v(" are defined to be cacheable.")]),e._v(" "),s("h3",{attrs:{id:"example-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-1"}},[e._v("#")]),e._v(" Example 1")]),e._v(" "),s("blockquote",[s("p",[e._v("GET /user/new Description: Creates new user")])]),e._v(" "),s("p",[e._v("Using GET for unsafe non-idempotent operations is "),s("strong",[e._v("not acceptable")]),e._v(".")]),e._v(" "),s("h3",{attrs:{id:"example-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[e._v("#")]),e._v(" Example 2")]),e._v(" "),s("blockquote",[s("p",[e._v("POST /status Description: Updates the status of a user approval request (to “Approved” or “Rejected”)")])]),e._v(" "),s("p",[e._v("Using the POST method for a status update is "),s("strong",[e._v("not acceptable")]),e._v(" (use PATCH).")]),e._v(" "),s("h3",{attrs:{id:"example-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[e._v("#")]),e._v(" Example 3")]),e._v(" "),s("blockquote",[s("p",[e._v("PUT /user Description: Creates a new user")])]),e._v(" "),s("p",[e._v("Using the PUT method for creating a new resource is "),s("strong",[e._v("not acceptable")]),e._v(" (use POST).")]),e._v(" "),s("h3",{attrs:{id:"example-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[e._v("#")]),e._v(" Example 4")]),e._v(" "),s("blockquote",[s("p",[e._v("PUT: /user Description: Updates some user details")])]),e._v(" "),s("p",[e._v("Using the PUT method for a partial update is "),s("strong",[e._v("not acceptable")]),e._v(" (use PATCH).")])])}),[],!1,null,null,null);t.default=r.exports}}]);