(window.webpackJsonp=window.webpackJsonp||[]).push([[480],{1730:function(t,a,e){"use strict";e.r(a);var s=e(7),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"kafka-notes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-notes"}},[t._v("#")]),t._v(" Kafka notes")]),t._v(" "),e("h2",{attrs:{id:"architecture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[t._v("#")]),t._v(" Architecture")]),t._v(" "),e("p",[t._v("Event streaming platform")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://www.tutorialspoint.com/apache_kafka/images/cluster_architecture.jpg",alt:"ar"}})]),t._v(" "),e("h3",{attrs:{id:"zoo-keeper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zoo-keeper"}},[t._v("#")]),t._v(" Zoo keeper")]),t._v(" "),e("p",[t._v("manages cluster, brokers, topics, offsets, events,...")]),t._v(" "),e("h3",{attrs:{id:"kafka-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-cluster"}},[t._v("#")]),t._v(" Kafka cluster")]),t._v(" "),e("ul",[e("li",[t._v("is a distributed system")]),t._v(" "),e("li",[t._v("is a set of many broker servers (in prod > 3)")]),t._v(" "),e("li",[t._v("highly scalable & fault tolerant")])]),t._v(" "),e("h3",{attrs:{id:"kafka-broker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-broker"}},[t._v("#")]),t._v(" Kafka Broker")]),t._v(" "),e("ul",[e("li",[t._v("form storage layer")]),t._v(" "),e("li",[t._v("Apps (consumer & producer) use broker to exchange data async")]),t._v(" "),e("li",[t._v("Broker organized events into 1 or many topics")])]),t._v(" "),e("h3",{attrs:{id:"event-message"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-message"}},[t._v("#")]),t._v(" Event / Message")]),t._v(" "),e("ul",[e("li",[t._v("Event is any data captured in real time")]),t._v(" "),e("li",[t._v("Event Stream is a stream of data in sequence of time from many data sources")]),t._v(" "),e("li",[t._v("Kafka stores events in files")]),t._v(" "),e("li",[t._v("Kafka Message Anatomy\n"),e("img",{attrs:{src:"https://media.geeksforgeeks.org/wp-content/uploads/20220720230741/21.png",alt:"Kafka Message Anatomy"}})])]),t._v(" "),e("h3",{attrs:{id:"producer-consumer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#producer-consumer"}},[t._v("#")]),t._v(" Producer & Consumer")]),t._v(" "),e("ul",[e("li",[t._v("Producer: sends events to topic in brokers")]),t._v(" "),e("li",[t._v("Consumer: read events from topics in brokers")]),t._v(" "),e("li",[t._v("Producers & Consumers are decoupled, both must provide Serializer/Deserializer for data types of event to convert them into a stream of bytes that Kafka uses to stores & transmits")])]),t._v(" "),e("h3",{attrs:{id:"consumer-group"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consumer-group"}},[t._v("#")]),t._v(" Consumer Group")]),t._v(" "),e("ul",[e("li",[t._v("is a set of consumers which corporate to consume data from topics")]),t._v(" "),e("li",[t._v("each consumer in group reads 1 partition in topic")]),t._v(" "),e("li",[t._v("If "),e("strong",[t._v("total of consumers <= total of partitions")]),t._v(", some consumers read one more partitions")]),t._v(" "),e("li",[t._v("If "),e("strong",[t._v("total of consumers > total of partitions")]),t._v(", some consumers will be idle. It means consumers in the same group can not read the same partition.")]),t._v(" "),e("li",[t._v("One consumer group can consume many topics")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://ibm.github.io/event-streams/images/kafka_overview.png",alt:"consumer group"}})]),t._v(" "),e("h3",{attrs:{id:"kafka-topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-topic"}},[t._v("#")]),t._v(" Kafka topic")]),t._v(" "),e("ul",[e("li",[t._v("a category to organize events in broker")]),t._v(" "),e("li",[t._v("identified by a name")]),t._v(" "),e("li",[t._v("broker can have many topics")]),t._v(" "),e("li",[t._v("Multi-producers can write events to a topic")]),t._v(" "),e("li",[t._v("Multi-consumers can read events from a / multi topic")])]),t._v(" "),e("h3",{attrs:{id:"kafka-topic-partitions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-topic-partitions"}},[t._v("#")]),t._v(" Kafka topic partitions")]),t._v(" "),e("ul",[e("li",[t._v("A topic is partitioned, break into multi smaller parts")]),t._v(" "),e("li",[t._v("Parts are located on different brokers")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.stack.imgur.com/qhGRl.png",alt:"img0"}})]),t._v(" "),e("p",[t._v("The producer will decide target partition to place any message, depending on:")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Partition id")]),t._v(", if it's specified within the message")]),t._v(" "),e("li",[e("strong",[t._v("key % num partitions")]),t._v(", if no partition id is mentioned")]),t._v(" "),e("li",[t._v("Round robin if neither "),e("strong",[t._v("partition id")]),t._v(" nor "),e("strong",[t._v("message key")]),t._v(" is available in the message means only the value is available")])]),t._v(" "),e("h3",{attrs:{id:"kafka-event-s-offset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-event-s-offset"}},[t._v("#")]),t._v(" Kafka Event's Offset")]),t._v(" "),e("ul",[e("li",[t._v("Offset is a unique id of a message , event's position in partitions")]),t._v(" "),e("li",[t._v("Offset is unchangeable")])]),t._v(" "),e("h3",{attrs:{id:"kafka-partition-s-replication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-partition-s-replication"}},[t._v("#")]),t._v(" Kafka Partition's Replication")]),t._v(" "),e("ul",[e("li",[t._v("Every topic partition in replicated "),e("em",[t._v("n times")]),t._v(" (factor) at different brokers in clsuter")]),t._v(" "),e("li",[t._v("One partition is leader, other are followers. Producer writes to leader, followers copy.")]),t._v(" "),e("li",[t._v("If leader fails, a follower is elected to become new leader.")]),t._v(" "),e("li",[t._v("Replication make sure that messages remain avaibable when some servers are failure")]),t._v(" "),e("li",[t._v("In production, factor should be odd, 3 , 5 , 7")])]),t._v(" "),e("h3",{attrs:{id:"comparision"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comparision"}},[t._v("#")]),t._v(" Comparision")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Kafka")]),t._v(" "),e("th",[t._v("Database")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Topic")]),t._v(" "),e("td",[t._v("Table")])]),t._v(" "),e("tr",[e("td",[t._v("Event")]),t._v(" "),e("td",[t._v("Row")])]),t._v(" "),e("tr",[e("td",[t._v("Offset")]),t._v(" "),e("td",[t._v("Primary key")])]),t._v(" "),e("tr",[e("td",[t._v("Partition")]),t._v(" "),e("td",[t._v("Sharding / Horizontal Partition")])]),t._v(" "),e("tr",[e("td",[t._v("Partition Replication")]),t._v(" "),e("td",[t._v("Master / Slave or Leader / Follower")])])])]),t._v(" "),e("h3",{attrs:{id:"use-cases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[t._v("#")]),t._v(" Use cases")]),t._v(" "),e("ul",[e("li",[t._v("Traditional messaging systems")]),t._v(" "),e("li",[t._v("website activity tracking")]),t._v(" "),e("li",[t._v("metrics")]),t._v(" "),e("li",[t._v("log aggregation")]),t._v(" "),e("li",[t._v("stream processing")]),t._v(" "),e("li",[t._v("event sourcing")]),t._v(" "),e("li",[t._v("commit log")])]),t._v(" "),e("h2",{attrs:{id:"error-handling"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#error-handling"}},[t._v("#")]),t._v(" Error handling")]),t._v(" "),e("ul",[e("li",[t._v("register callback when publishing message")]),t._v(" "),e("li",[t._v("store failed message into db")])]),t._v(" "),e("h3",{attrs:{id:"polling-service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#polling-service"}},[t._v("#")]),t._v(" Polling Service")]),t._v(" "),e("ul",[e("li",[t._v("Scheduler to configure & schedule tasks in background")]),t._v(" "),e("li",[t._v("Read data from source (database, e.g message publishing failed), then send to Kafka server\n"),e("ul",[e("li",[t._v("If success, update status or remove")]),t._v(" "),e("li",[t._v("If failure, update status & re-send next time or notification")])])])]),t._v(" "),e("h3",{attrs:{id:"dead-letter-topic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dead-letter-topic"}},[t._v("#")]),t._v(" Dead-letter Topic")]),t._v(" "),e("ul",[e("li",[t._v("for message consumming failed many times => move to a dead letter topic")]),t._v(" "),e("li",[t._v("Method use for consumers that cares about the sequence of events.")]),t._v(" "),e("li",[t._v("Avoid blocking if ordered consumer")]),t._v(" "),e("li",[t._v("Avoid data lost")]),t._v(" "),e("li",[t._v("Name same with original topic with postfix DLT. E.g: 'statistic.DLT'")]),t._v(" "),e("li",[t._v("use default handler")])]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultErrorHandler")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("errorHandler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("KafkaOperations")]),e("span",{pre:!0,attrs:{class:"token generics"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DefaultErrorHandler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DeadLetterPublishingRecoverer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FixedBackOff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000L")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"kafka-consumer-non-block-retry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kafka-consumer-non-block-retry"}},[t._v("#")]),t._v(" Kafka Consumer non-block retry")]),t._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RetryableTopic")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attempts "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dltTopicSuffix "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-dlt"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" backoff "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Backoff")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delay"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" multiplier "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@KafkaListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statGroup"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" topic "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stat"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stat")]),t._v(" stat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"why-is-kafka-fast"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-is-kafka-fast"}},[t._v("#")]),t._v(" Why is Kafka fast?")]),t._v(" "),e("p",[t._v("Kafka achieves low latency message delivery through Sequential I/O and "),e("strong",[t._v("Zero Copy Principle")]),t._v(".\n"),e("img",{attrs:{src:"https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fff3743a9-915c-44c8-9bc3-562a754035f8_2469x2973.jpeg",alt:"Kafka 0 copy"}})]),t._v(" "),e("p",[t._v("Zero copy is a shortcut to save the multiple data copies between application context and kernel context. This approach brings down the time by ​​approximately 65%.")]),t._v(" "),e("h2",{attrs:{id:"tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[t._v("#")]),t._v(" Tools")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.kafkatool.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("kafkatool"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("https://www.tutorialspoint.com/apache_kafka/index.htm")])])}),[],!1,null,null,null);a.default=r.exports}}]);