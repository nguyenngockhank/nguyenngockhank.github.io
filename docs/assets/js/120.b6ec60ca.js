(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{1366:function(e,t,s){"use strict";s.r(t);var a=s(7),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"websocket-notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#websocket-notes"}},[e._v("#")]),e._v(" Websocket Notes")]),e._v(" "),a("p",[e._v("The WebSocket protocol is a modern chat messaging protocol.")]),e._v(" "),a("p",[e._v("It provides a persistent channel that sends text and binary data in "),a("strong",[e._v("both directions")]),e._v(" (full-duplex).")]),e._v(" "),a("p",[e._v("The data can even be sent simultaneously, if needed.")]),e._v(" "),a("p",[e._v("While originally designed to facilitate the communication between a server and browser, WebSocket can be (and widely are) used in "),a("strong",[e._v("mobile apps")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"ws-vs-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ws-vs-http"}},[e._v("#")]),e._v(" WS vs HTTP")]),e._v(" "),a("p",[e._v("HTTP and WebSocket both are communication protocols used in client-server communication.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://i.pinimg.com/originals/5f/21/4b/5f214b74300a553d5440f7f027c8211c.webp",alt:"WS vs HTTP"}})]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Connection via WS")]),e._v(" "),a("th",[e._v("Connection via HTTP")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Bi-directional communication")]),e._v(" "),a("td",[e._v("Unidirectional communication")])]),e._v(" "),a("tr",[a("td",[e._v("Connection is kept alive untile terminated by client or server")]),e._v(" "),a("td",[e._v("Connection is terminated after request/response")])]),e._v(" "),a("tr",[a("td",[e._v("Real time data is received on a single communication channel & can be continuously updated")]),e._v(" "),a("td",[e._v("HTTP data requests use simple RESTfull API. They send a ome-tine current state response for a query")])]),e._v(" "),a("tr",[a("td",[e._v("Best used for applications in need of quick connections & realtime data")]),e._v(" "),a("td",[e._v("Best used for applications that dont reqire quick, 2-way connections")])]),e._v(" "),a("tr",[a("td",[e._v("E.g: crypto market cap, multiplayer game, collaborative platform, messaging app")]),e._v(" "),a("td",[e._v("E.g: Browser search, email, social media updates, final game scores, ...")])])])]),e._v(" "),a("h2",{attrs:{id:"ws-vs-sse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ws-vs-sse"}},[e._v("#")]),e._v(" WS vs SSE")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Feature")]),e._v(" "),a("th",[e._v("WS")]),e._v(" "),a("th",[e._v("SSE")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Communication Direction")]),e._v(" "),a("td",[e._v("wo-way (full duplex)")]),e._v(" "),a("td",[e._v("One-way (server to browser)")])]),e._v(" "),a("tr",[a("td",[e._v("Complexity")]),e._v(" "),a("td",[e._v("More complex")]),e._v(" "),a("td",[e._v("Simpler")])]),e._v(" "),a("tr",[a("td",[e._v("Data Format\tF")]),e._v(" "),a("td",[e._v("lexible (text and binary)")]),e._v(" "),a("td",[e._v("Primarily text-based")])])])]),e._v(" "),a("h2",{attrs:{id:"ws-vs-xmpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ws-vs-xmpp"}},[e._v("#")]),e._v(" WS vs XMPP")]),e._v(" "),a("p",[a("strong",[e._v("XMPP")]),e._v(" (Extensible Messaging and Presence Protocol) is an open standard communications protocol that allows for transmitting XML fragments between a server and client. A client, in this case, would be a browser or a mobile app. XMPP is one of the oldest and most widely supported instant messaging protocols. It has been in use for more than two decades.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Pros of XMPP")]),e._v(" "),a("th",[e._v("Pros of WS")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("An open, decentralized standard that makes it extensible & flexible")]),e._v(" "),a("td",[e._v("A persistent connection which makes it one of fastest transfer protocols")])]),e._v(" "),a("tr",[a("td",[e._v("Great securtiy features such as authentication, authorization, and encryption")]),e._v(" "),a("td",[e._v("Multiple users can be connected through a single connection - lowering latency")])]),e._v(" "),a("tr",[a("td",[e._v("Two decades of use & widespread support")]),e._v(" "),a("td",[e._v("can send any binary or text-based data type")])]),e._v(" "),a("tr",[a("td",[e._v("Can stack with other protocols such as Websocket to remove some limitations")]),e._v(" "),a("td",[e._v("Extensible & flexible - can connect multiple types of protocols together")])])])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Cons of XMPP")]),e._v(" "),a("th",[e._v("Cons of WS")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("Not optimized for transfering binary data")]),e._v(" "),a("td",[e._v("Fewer built-int security measures than XMPP")])]),e._v(" "),a("tr",[a("td",[e._v("Decentralized architecture emans slower transmission speed")]),e._v(" "),a("td",[e._v("Doesnt provide any messaging or presense functionality & requires an additional chat protocol to provide these functionalities")])])])]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.reddit.com/r/xmpp/comments/3gssk2/is_xmpp_dead/",target:"_blank",rel:"noopener noreferrer"}},[e._v("XMPP is not dead."),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://news.ycombinator.com/item?id=31519122",target:"_blank",rel:"noopener noreferrer"}},[e._v("Why XMPP failed and SMTP didn't?"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"horizontal-scalable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#horizontal-scalable"}},[e._v("#")]),e._v(" Horizontal Scalable")]),e._v(" "),a("h3",{attrs:{id:"issue-1-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issue-1-state"}},[e._v("#")]),e._v(" Issue #1: State")]),e._v(" "),a("p",[e._v("Start with the HAProxy")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("defaults\n  mode http\n  option http-server-close\n  timeout connect     5s\n  timeout client      30s\n  timeout client-fin  30s\n  timeout server      30s\n  timeout tunnel      1h\n  default-server inter 1s rise 2 fall 1 on-marked-down shutdown-sessions\n  option forwardfor\n\nfrontend all\n  bind 127.0.0.1:8080\n  default_backend backends\n\nbackend backends\n  server srv1 127.0.0.1:8081 check\n  server srv2 127.0.0.1:8082 check\n")])])]),a("p",[e._v("By default, HAProxy is using a "),a("strong",[e._v("round-robin")]),e._v(" strategy")]),e._v(" "),a("p",[a("strong",[e._v("Most REST APIs are stateless.")]),e._v(" It means that nothing related to a single user making a request is saved on an instance itself. The thing is, it is not the same case with WebSockets.")]),e._v(" "),a("p",[a("img",{attrs:{src:s(531),alt:"issue1"}})]),e._v(" "),a("h4",{attrs:{id:"solution-sticky-sessions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solution-sticky-sessions"}},[e._v("#")]),e._v(" Solution: Sticky sessions")]),e._v(" "),a("p",[a("strong",[e._v("Sticky sessions")]),e._v("  (sticky connection)")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("backend backends\n  balance leastconn\n  cookie serverid insert\n  server srv1 127.0.0.1:8081 check cookie srv1\n  server srv2 127.0.0.1:8082 check cookie srv2\n")])])]),a("ul",[a("li",[e._v("Instead of using "),a("code",[e._v("round-robin")]),e._v(",  go with "),a("code",[e._v("leastconn")]),e._v(" => new user is connected to the instance with the lowest overall number of connections.")]),e._v(" "),a("li",[e._v("Sign every request from a single user with a cookie. It will contain the name of the backend to be used.")])]),e._v(" "),a("h3",{attrs:{id:"issue-2-broadcasting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issue-2-broadcasting"}},[e._v("#")]),e._v(" Issue #2 Broadcasting")]),e._v(" "),a("p",[e._v("The WebSocket Server "),a("strong",[e._v("knows only about clients connected to this specific instance")])]),e._v(" "),a("h4",{attrs:{id:"solution-pub-sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solution-pub-sub"}},[e._v("#")]),e._v(" Solution: Pub/Sub")]),e._v(" "),a("p",[e._v("The easiest option is to introduce communication between different instances. All of them could be subscribed to a specific channel and handle upcoming messages.")]),e._v(" "),a("p",[e._v("There are many ready-to-go solutions, like Redis, Kafka, or Nats.")]),e._v(" "),a("h2",{attrs:{id:"refs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[e._v("#")]),e._v(" Refs")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://tsh.io/blog/how-to-scale-websocket/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to scale WebSocket â€“ horizontal scaling"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports},531:function(e,t,s){e.exports=s.p+"assets/img/websocket-load-balancing-issue.6df3eee9.png"}}]);