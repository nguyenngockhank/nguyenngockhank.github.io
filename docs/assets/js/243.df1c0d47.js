(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{1399:function(t,e,a){"use strict";a.r(e);var s=a(7),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"smart-contract-notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smart-contract-notes"}},[t._v("#")]),t._v(" Smart contract notes")]),t._v(" "),a("p",[t._v("Smart contracts are self-executing agreements written in code and stored on a blockchain. They automatically execute when specific conditions are met, eliminating the need for intermediaries.")]),t._v(" "),a("p",[a("em",[t._v("Think of them as automated vending machines: you fulfill the conditions (insert money), and the machine dispenses the item.")])]),t._v(" "),a("h2",{attrs:{id:"pros-cons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pros-cons"}},[t._v("#")]),t._v(" Pros & Cons")]),t._v(" "),a("h3",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" Props")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Automation")]),t._v(": Automates tasks and processes, reducing the need for manual intervention.")]),t._v(" "),a("li",[a("strong",[t._v("Transparency")]),t._v(": All actions and data are recorded on the blockchain, making transactions auditable.")]),t._v(" "),a("li",[a("strong",[t._v("Security")]),t._v(": Blockchain's cryptographic nature enhances security and reduces the risk of fraud.")]),t._v(" "),a("li",[a("strong",[t._v("Efficiency")]),t._v(": Eliminates intermediaries, streamlining processes and reducing costs.")]),t._v(" "),a("li",[a("strong",[t._v("Immutability")]),t._v(": Once deployed, the code of a smart contract cannot be altered, ensuring that agreements are enforced as intended.")]),t._v(" "),a("li",[a("strong",[t._v("Decentralization")]),t._v(": Smart contracts operate on decentralized networks, making them resistant to censorship and single points of failure.")])]),t._v(" "),a("h3",{attrs:{id:"cons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cons"}},[t._v("#")]),t._v(" Cons:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Complexity")]),t._v(": Developing and debugging smart contracts can be complex and requires specialized skills.")]),t._v(" "),a("li",[a("strong",[t._v("Security Vulnerabilities")]),t._v(": Bugs in smart contract code can be exploited by hackers, leading to financial losses.")]),t._v(" "),a("li",[a("strong",[t._v("Irreversibility")]),t._v(": Once a transaction is executed on the blockchain, it is irreversible, making it crucial to carefully review and test contracts before deployment.")]),t._v(" "),a("li",[a("strong",[t._v("Scalability Issues")]),t._v(": Some blockchain networks may face scalability challenges, leading to slow transaction speeds and high gas fees during periods of high demand.")]),t._v(" "),a("li",[a("strong",[t._v("Regulatory Uncertainty")]),t._v(": The regulatory landscape surrounding smart contracts is still evolving, creating uncertainty for businesses and developers.")]),t._v(" "),a("li",[a("strong",[t._v("Storage Limitations")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Expensive Storage")]),t._v(": Storing large amounts of data directly on the blockchain can be incredibly expensive due to high gas costs associated with writing data to the blockchain's storage.")]),t._v(" "),a("li",[a("strong",[t._v("Limited Storage Space")]),t._v(": While not a hard limit, storing excessive data on-chain can make transactions expensive and slow, impacting user experience.")]),t._v(" "),a("li",[a("strong",[t._v("Scalability Issues")]),t._v(": As the blockchain grows, storage limitations can become more pronounced, potentially hindering the scalability of decentralized applications (dApps).")])])]),t._v(" "),a("li",[a("strong",[t._v("Gas fee")]),t._v(":\n"),a("ul",[a("li",[a("strong",[t._v("Transaction Costs")]),t._v(": Every interaction with a smart contract (reading or writing data, executing functions) incurs a gas fee. These fees can vary significantly depending on network congestion and the complexity of the transaction.")]),t._v(" "),a("li",[a("strong",[t._v("High Costs for Complex Operations")]),t._v(": Complex operations, such as large loops, extensive data manipulation, or recursive function calls, consume more gas, leading to higher transaction costs.")]),t._v(" "),a("li",[a("strong",[t._v("User Experience")]),t._v(": High gas fees can deter users from interacting with certain dApps, especially for small transactions or those with limited budgets.")])])])]),t._v(" "),a("h3",{attrs:{id:"mitigating-these-challenges"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mitigating-these-challenges"}},[t._v("#")]),t._v(" Mitigating These Challenges:")]),t._v(" "),a("p",[t._v("0 "),a("strong",[t._v("Off-Chain Storage")]),t._v(": Utilize off-chain storage solutions like IPFS or databases to store large amounts of data while maintaining a link on-chain.")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Gas Optimization Techniques")]),t._v(": Optimize smart contract code to minimize gas consumption. This includes using efficient algorithms, minimizing storage writes, and utilizing libraries for common operations.")]),t._v(" "),a("li",[a("strong",[t._v("Layer-2 Solutions")]),t._v(": Explore Layer-2 scaling solutions like "),a("em",[t._v("Optimism")]),t._v(" or "),a("em",[t._v("Polygon")]),t._v(", which offer faster transaction speeds and lower gas fees by processing transactions off-chain.")])]),t._v(" "),a("h2",{attrs:{id:"identify-and-fix-bugs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#identify-and-fix-bugs"}},[t._v("#")]),t._v(" Identify and fix bugs")]),t._v(" "),a("h3",{attrs:{id:"_1-thorough-testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-thorough-testing"}},[t._v("#")]),t._v(" 1. Thorough Testing")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Unit Tests")]),t._v(": Write comprehensive unit tests to cover various scenarios and edge cases. These tests should isolate individual functions and verify their expected behavior.")]),t._v(" "),a("li",[a("strong",[t._v("Integration Tests")]),t._v(": Test how different parts of the contract interact with each other. This helps identify issues that might not be apparent in unit tests.")]),t._v(" "),a("li",[a("strong",[t._v("Fuzzing")]),t._v(": Use automated tools to generate random inputs and test the contract's resilience under unexpected conditions.")])]),t._v(" "),a("h3",{attrs:{id:"formal-verification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#formal-verification"}},[t._v("#")]),t._v(" Formal Verification")]),t._v(" "),a("p",[a("strong",[t._v("Mathematical Proofs")]),t._v(": Employ formal verification techniques to mathematically prove the correctness of your contract's logic. This provides a high level of assurance but can be complex to implement.")]),t._v(" "),a("h3",{attrs:{id:"security-audits"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-audits"}},[t._v("#")]),t._v(" Security Audits")]),t._v(" "),a("p",[a("strong",[t._v("Expert Review")]),t._v(": Engage professional security auditors to scrutinize your contract's code for vulnerabilities. These experts have in-depth knowledge of common attack vectors and can identify potential risks.")]),t._v(" "),a("h3",{attrs:{id:"bug-bounty-programs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bug-bounty-programs"}},[t._v("#")]),t._v(" Bug Bounty Programs")]),t._v(" "),a("p",[a("strong",[t._v("Incentivized Discovery")]),t._v(": Offer rewards to security researchers who can find and responsibly disclose vulnerabilities in your contract.")]),t._v(" "),a("h3",{attrs:{id:"upgradability"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgradability"}},[t._v("#")]),t._v(" Upgradability")]),t._v(" "),a("p",[a("strong",[t._v("Proxy Contracts")]),t._v(": Implement upgradability mechanisms using proxy contracts. This allows you to deploy a new version of the contract without changing its address, making it easier to fix bugs or add new features.")]),t._v(" "),a("h3",{attrs:{id:"continuous-monitoring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continuous-monitoring"}},[t._v("#")]),t._v(" Continuous Monitoring")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Blockchain Explorers")]),t._v(": Regularly monitor blockchain explorers to track your contract's activity and identify any unusual behavior.")]),t._v(" "),a("li",[a("strong",[t._v("Alerting Systems")]),t._v(": Set up alerts for specific events, such as failed transactions or unexpected changes in contract state.")])]),t._v(" "),a("h3",{attrs:{id:"community-feedback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#community-feedback"}},[t._v("#")]),t._v(" Community Feedback")]),t._v(" "),a("p",[a("strong",[t._v("Engage with Users")]),t._v(": Actively seek feedback from users and community members. They may encounter issues or edge cases that you haven't considered.")]),t._v(" "),a("h3",{attrs:{id:"key-considerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-considerations"}},[t._v("#")]),t._v(" Key Considerations:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Timely Response")]),t._v(": Act promptly to address identified bugs to minimize potential damage.")]),t._v(" "),a("li",[a("strong",[t._v("Transparency")]),t._v(": Communicate with users about any identified bugs and the steps taken to fix them.")]),t._v(" "),a("li",[a("strong",[t._v("Version Control")]),t._v(": Maintain a clear version history of your contract's code to track changes and facilitate rollbacks if necessary.")])]),t._v(" "),a("h2",{attrs:{id:"proxy-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proxy-contract"}},[t._v("#")]),t._v(" Proxy contract")]),t._v(" "),a("h3",{attrs:{id:"key-concepts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#key-concepts"}},[t._v("#")]),t._v(" Key Concepts")]),t._v(" "),a("ul",[a("li",[t._v("Proxy Contract: A contract that acts as an intermediary, forwarding function calls to another contract (the implementation contract).")]),t._v(" "),a("li",[t._v("Implementation Contract: The contract that contains the actual logic and state variables.")]),t._v(" "),a("li",[t._v("Upgradability: The ability to modify the implementation contract without affecting the proxy contract's address or state, allowing for bug fixes, feature additions, or security improvements.")])]),t._v(" "),a("h3",{attrs:{id:"steps-to-create-a-proxy-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps-to-create-a-proxy-contract"}},[t._v("#")]),t._v(" Steps to Create a Proxy Contract")]),t._v(" "),a("ol",[a("li",[t._v("Design the Implementation Contract:\n"),a("ul",[a("li",[t._v("Define the contract's purpose, functions, and state variables.")]),t._v(" "),a("li",[t._v("Write the Solidity code for the implementation contract.")])])]),t._v(" "),a("li",[t._v("Create the Proxy Contract:\n"),a("ul",[a("li",[t._v("Design the proxy contract's logic:\n"),a("ul",[a("li",[t._v("Store the address of the current implementation contract.")]),t._v(" "),a("li",[t._v("Implement a fallback function that delegates calls to the implementation contract using delegatecall.")]),t._v(" "),a("li",[t._v("Include an administrative function (e.g., upgradeTo) to update the implementation contract address.")])])]),t._v(" "),a("li",[t._v("Write the Solidity code for the proxy contract.")])])]),t._v(" "),a("li",[t._v("Deploy the Contracts:\n"),a("ul",[a("li",[t._v("Deploy the implementation contract to the blockchain.")]),t._v(" "),a("li",[t._v("Deploy the proxy contract, initializing it with the address of the implementation contract.")])])]),t._v(" "),a("li",[t._v("Interact with the Proxy:\n"),a("ul",[a("li",[t._v("Users interact with the proxy contract, and the proxy forwards the calls to the implementation contract.")])])])]),t._v(" "),a("h2",{attrs:{id:"gas-fees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gas-fees"}},[t._v("#")]),t._v(" Gas fees")]),t._v(" "),a("h3",{attrs:{id:"gas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gas"}},[t._v("#")]),t._v(" Gas")]),t._v(" "),a("p",[t._v("Gas fees in blockchain networks, particularly Ethereum, are a crucial mechanism that incentivizes validators and ensures the smooth functioning of the network.")]),t._v(" "),a("p",[a("strong",[t._v("Purpose")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("prevent the spam / ddos")]),t._v(" "),a("li",[t._v("pay tip for minner / validator")]),t._v(" "),a("li",[t._v("paid by sender (who signed the message) to minner won to write tx to blockchain")])]),t._v(" "),a("h3",{attrs:{id:"how-gas-fees-are-calculated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-gas-fees-are-calculated"}},[t._v("#")]),t._v(" How Gas Fees are Calculated")]),t._v(" "),a("p",[t._v("The calculation of gas fees involves two key components:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Gas Limit")]),t._v(": This is an estimate of the computational effort required to execute a transaction. It's set by the user and represents the maximum amount of gas the user is willing to spend on a transaction.")]),t._v(" "),a("li",[a("strong",[t._v("Gas Price")]),t._v(": This is the price per unit of gas, determined by market forces of supply and demand. Higher gas prices generally lead to faster transaction processing.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Formula")]),t._v(" "),a("p",[t._v("Gas Fee = Gas Limit * Gas Price")])]),t._v(" "),a("h3",{attrs:{id:"factors-influencing-gas-fees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#factors-influencing-gas-fees"}},[t._v("#")]),t._v(" Factors Influencing Gas Fees")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Network Congestion")]),t._v(": When the network is busy (e.g., during popular NFT drops or DeFi activities), demand for block space increases, driving up gas prices.")]),t._v(" "),a("li",[a("strong",[t._v("Transaction Complexity")]),t._v(": More complex transactions, such as smart contract interactions, typically require more gas than simple transfers.\n"),a("ul",[a("li",[t._v("Transaction Complexity = seri Elementary instruction. E.g:\n"),a("ul",[a("li",[t._v("plus 2 numbers = 10 gas")]),t._v(" "),a("li",[t._v("send coin = 20 gas")]),t._v(" "),a("li",[t._v("store a number = 30 gas")])])])])]),t._v(" "),a("li",[a("strong",[t._v("Gas Price Strategy")]),t._v(": Users can choose different gas price strategies. A higher price generally results in faster transaction confirmation, while a lower price may lead to longer wait times.")])])])}),[],!1,null,null,null);e.default=i.exports}}]);