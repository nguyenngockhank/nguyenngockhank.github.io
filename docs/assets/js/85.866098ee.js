(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{567:function(n,h,c){n.exports=c.p+"assets/img/97-7.7e904809.png"},961:function(n,h,c){"use strict";c.r(h);var t=c(7),i=Object(t.a)({},(function(){var n=this,h=n.$createElement,t=n._self._c||h;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"_7-can-than-voi-viec-dung-chung-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-can-than-voi-viec-dung-chung-code"}},[n._v("#")]),n._v(" 7. Cẩn thận với việc dùng chung code")]),n._v(" "),t("p",[t("img",{attrs:{src:c(567),alt:"Image for post"}})]),n._v(" "),t("p",[n._v("Đó là dự án đầu tiên của tôi trong công ty. Tôi vừa mới tốt nghiệp và khao khát được chứng minh bản thân, ở lại công ty muộn để xem những dòng code đang có. Khi làm tính năng đầu tiên, tôi đã hết sức cẩn thận vận dụng những gì đã học — ghi chú, log, lôi những đoạn code xài chung ra thành các thư viện bất cứ chỗ nào có thể. Tôi đã rất sẵn sàng cho code review đã làm tôi ngạc nhiên — việc tái sử dụng code đã không được chấp nhận.")]),n._v(" "),t("p",[n._v("Làm sao có thể như thế được? Suốt khi học đại học, tái sử dụng được coi như là hình mẫu trong lập trình. Tất cả những bài viết mà tôi đã từng đọc, các cuốn sách, những chuyên gia phần mềm những người đã dạy tôi, không lẽ tất cả đều sai?")]),n._v(" "),t("p",[n._v("Hoá ra là tôi đã bỏ qua một thứ quan trọng: "),t("strong",[n._v("Ngữ cảnh (Context)")]),n._v(".")]),n._v(" "),t("p",[n._v("Thực tế cho việc 2 phần khác nhau của hệ thống thực hiện 1 logic theo cùng một cách mang ít ý nghĩa hơn tôi tưởng. Trước lúc tôi lôi đoạn code chung ra thành thư viện, các phần này không phụ thuộc vào nhau. Mỗi phần sẽ có thể biến đổi khác nhau trong tương lai. Mỗi phần có thể thay đổi logic riêng của nó để phù hợp với sự thay đổi về business của hệ thống. 4 dòng code giống nhau chỉ là tình cờ.")]),n._v(" "),t("p",[n._v("Cái thư viện code dùng chung mà tôi tạo ra giống như việc buộc dây của chiếc giày này vào chiếc giày bên kia. Hai chân phải bước cùng nhau. Chi phí bảo trì cho các hàm độc lập thường không đáng kể, nhưng những thư viện chung thì sẽ đòi hỏi phải test khá nhiều.\nKhi số dòng code tôi viết được giảm đi, ngược lại tôi đã làm cho nhiều thứ phụ thuộc vào nhau hơn.")]),n._v(" "),t("p",[n._v("Những cái lỗi này nó nguy hiểm ở chỗ, trông thì có vẻ là ý tưởng hay. Khi ứng dụng vào đúng chỗ, thì nó phát huy giá trị. Ngược lại sai chỗ thì nó tăng chi phí hơn là giá trị. Khi gặp phải một codebase mà không biết chắc là các phần được dùng ở những chỗ nào, tôi giờ cẩn thận hơn nhiều về việc dùng chung.")]),n._v(" "),t("p",[n._v("Cẩn thận với việc xài chung. Hãy kiểm tra ngữ cảnh. Sau đó mới tiếp tục.")]),n._v(" "),t("p",[n._v("Khi bạn thấy 2 đoạn code giống nhau, ngay lập tức bạn sẽ nghĩ tới việc tách chúng ra thành một function để có thể dùng chung. Hãy cân nhắc xem ngữ cảnh của chúng có giống nhau không. Liệu trong tương lai khi business của 1 trong 2 bên thay đổi thì phần dùng chung đó có còn được dùng chung nữa không, nếu không thì bạn nên xem lại.")])])}),[],!1,null,null,null);h.default=i.exports}}]);