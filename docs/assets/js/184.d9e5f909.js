(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{752:function(n,t,i){"use strict";i.r(t);var c=i(7),h=Object(c.a)({},(function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("h1",{attrs:{id:"_65-kieu-mien-chuyen-biet-đuoc-ua-chuong-hon-la-kieu-nguyen-thuy"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_65-kieu-mien-chuyen-biet-đuoc-ua-chuong-hon-la-kieu-nguyen-thuy"}},[n._v("#")]),n._v(" 65: Kiểu Miền Chuyên Biệt Được Ưa Chuộng Hơn Là Kiểu Nguyên Thủy")]),n._v(" "),i("p",[n._v("Vào ngày 23 tháng 9 năm 1997, chiếc tàu quỹ đạo Khí hậu Sao Hỏa đã bị thất lạc khi đang tiến vào quỹ đạo Sao Hỏa vì một lỗi phần mềm khi trở về Trái Đất. Sau này, lỗi ấy được gọi là metric mix-up. Trạm phần mềm tại mặt đất đã phải làm việc rất cật lực trong khi con tàu vũ trụ thì lại cần nỗ lực nhiều hơn thế, và trạm phần mềm mặt đất đã đánh giá thấp sức mạnh của các máy đẩy trong tàu vũ trụ với hệ số 4.45.")]),n._v(" "),i("p",[n._v("Đây là một trong các ví dụ về sự thất bại phần mềm có thể được ngăn chặn nếu được áp dụng nhiều và chắc các kiểu gõ miền chuyên biệt ("),i("em",[n._v("domain-specific")]),n._v("). Đây cũng là một ví dụ cho lí luận về các tính năng của ngôn ngữ "),i("strong",[n._v("Ada")]),n._v(", một trong các mục tiêu thiết kế chính của những tính năng đó là hoàn thiện Quan trọng an toàn phần mềm nhúng ("),i("strong",[n._v("embedded safety-critical software")]),n._v("). Ada có tính vững mạnh trong việc kiểm tra kiểu tĩnh cho cả hai kiểu nguyên thủy và kiểu do người dùng định (user-defined):")]),n._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[n._v("type Velocity_In_Knots is new Float range 0.0 .. 500.00; \ntype Distance_In_Nautical_Miles is new Float range 0.0 .. 3000.00;\nVelocity: Velocity_In_Knots;\nDistance: Distance_In_Nautical_Miles;\nSome_Number: Float;\nSome_Number:= Distance + Velocity; — Will be caught by the compiler as a type error.\n")])])]),i("p",[n._v("Các nhà phát triển ở lĩnh vực ít đòi hỏi hơn cũng có lợi từ việc sử dụng nhiều hơn kiểu gõ "),i("em",[n._v("domain-specific")]),n._v(", nơi họ có thể sử dụng kiểu dữ liệu nguyên thủy được cung cấp bởi ngôn ngữ và thư viện của nó, như là "),i("em",[n._v("strings")]),n._v(" và "),i("em",[n._v("floats")]),n._v(". Trong ngôn ngữ "),i("strong",[n._v("Java")]),n._v(", "),i("strong",[n._v("C++")]),n._v(", "),i("strong",[n._v("Python")]),n._v(" và các ngôn ngữ hiện đại khác, kiểu dữ liệu trừu tượng được xem như là lớp ("),i("em",[n._v("class")]),n._v("). Sử dụng các lớp như là "),i("em",[n._v("Velocity_In_Knots")]),n._v(" và "),i("em",[n._v("Distance_In_Nautical_Miles")]),n._v(" sẽ tăng thêm giá trị nối liền với chất lượng code.")]),n._v(" "),i("ul",[i("li",[n._v("Code trở nên dễ đọc vì nó thể hiện nhiều khái niệm tuyệt đối của một lĩnh vực chứ không chỉ là String hay Float.")]),n._v(" "),i("li",[n._v("Code trở nên có thể kiểm tra vì nó đóng gói (encapsulates) các hành vi có thể dễ dàng kiểm tra.")]),n._v(" "),i("li",[n._v("Code tạo điệu kiện để tái sử dụng các ứng dụng và hệ thống.")])]),n._v(" "),i("p",[n._v("Sử dụng ngôn ngữ đánh máy tĩnh hay động đều mang đến cho người dùng giá trị như nhau. Điểm khác nhau duy nhất là các nhà phát triển sử dụng ngôn ngữ đánh máy tĩnh cần sự giúp đỡ của trình biên dịch trong khi những người sử dụng ngôn ngữ đánh máy động lại có xu hướng dựa vào các bài kiểm tra đơn vị của họ. Phong cách kiểm tra có thể khác nhau, nhưng mục đích và cách thể hiện thì không.")]),n._v(" "),i("p",[n._v("Và lời khuyên là hãy bắt đầu khám phá các kiểu domain-specific vì mục đích phát triển phần mềm chất lượng.")])])}),[],!1,null,null,null);t.default=h.exports}}]);